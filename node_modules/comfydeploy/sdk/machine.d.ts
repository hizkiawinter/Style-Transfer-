import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "../models/operations/index.js";
export declare class Machine extends ClientSDK {
    /**
     * Register a machine event
     */
    postGpuEvent(request?: operations.PostGpuEventRequestBody | undefined, options?: RequestOptions): Promise<operations.PostGpuEventResponseBody>;
    /**
     * Get recent gpu events
     */
    listEvents(request: operations.GetMachineMachineIdEventsRequest, options?: RequestOptions): Promise<Array<operations.GetMachineMachineIdEventsResponseBody>>;
    /**
     * Create a new machine
     *
     * @remarks
     * Create a new machine with optional default setting
     */
    postV1Machines(request?: operations.PostV1MachinesRequestBody | undefined, options?: RequestOptions): Promise<operations.PostV1MachinesResponseBody>;
    /**
     * Retrieve all machines for a user
     *
     * @remarks
     * Retrieve details of all machines for the authenticated user, with pagination and optional field selection
     */
    getV1Machines(request: operations.GetV1MachinesRequest, options?: RequestOptions): Promise<operations.GetV1MachinesResponseBody>;
    /**
     * Retrieve a specific machine by ID
     *
     * @remarks
     * Retrieve details of a specific machine by its ID, with optional workspace details
     */
    getV1MachinesMachineId(request: operations.GetV1MachinesMachineIdRequest, options?: RequestOptions): Promise<operations.GetV1MachinesMachineIdResponseBody>;
}
//# sourceMappingURL=machine.d.ts.map