"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.Workflows = void 0;
const workflowsCreate_js_1 = require("../funcs/workflowsCreate.js");
const workflowsGet_js_1 = require("../funcs/workflowsGet.js");
const workflowsGetAll_js_1 = require("../funcs/workflowsGetAll.js");
const workflowsGetOutputs_js_1 = require("../funcs/workflowsGetOutputs.js");
const workflowsPostMachineEndpoint_js_1 = require("../funcs/workflowsPostMachineEndpoint.js");
const sdks_js_1 = require("../lib/sdks.js");
const fp_js_1 = require("../types/fp.js");
class Workflows extends sdks_js_1.ClientSDK {
    /**
     * Create an endpoint for a machine
     */
    async postMachineEndpoint(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, workflowsPostMachineEndpoint_js_1.workflowsPostMachineEndpoint)(this, request, options));
    }
    /**
     * Create a new workflow
     *
     * @remarks
     * Create a new workflow by analyzing the provided workflow JSON
     */
    async create(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, workflowsCreate_js_1.workflowsCreate)(this, request, options));
    }
    /**
     * Retrieve workflows
     *
     * @remarks
     * Retrieve workflows based on optional query parameters
     */
    async getAll(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, workflowsGetAll_js_1.workflowsGetAll)(this, request, options));
    }
    /**
     * Retrieve a specific workflow by ID
     *
     * @remarks
     * Retrieve the latest version of a specific workflow by its ID
     */
    async get(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, workflowsGet_js_1.workflowsGet)(this, request, options));
    }
    /**
     * Retrieve the most recent outputs for a workflow
     *
     * @remarks
     * Retrieve the latest version of a specific workflow by its ID
     */
    async getOutputs(request, options) {
        return (0, fp_js_1.unwrapAsync)((0, workflowsGetOutputs_js_1.workflowsGetOutputs)(this, request, options));
    }
}
exports.Workflows = Workflows;
//# sourceMappingURL=workflows.js.map