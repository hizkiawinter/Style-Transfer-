import { object } from "zod";
import { ComfyDeploy } from "./src/index.js";

const cd = new ComfyDeploy({
    // bearer: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcl8yWmQ3QndaeDRBYmpRQVFyeW1HVHdrZmMyVlUiLCJvcmdfaWQiOiJvcmdfMmFtNExqa1E1SWFXR1JZTUh4R1hmSGRIY2pBIiwiaWF0IjoxNzE3MDUyNTk1fQ.3SB1chx2uRqMCn9VEg5rMdc6t4XD00GQ62UhAXk4dp4",
    // bearer: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcl8yWkE2dnVLRDNJSlhqdTE2b0pWUUdMQmNXd2ciLCJvcmdfaWQiOiJvcmdfMmJXUTFGb1dDM1dybzM5MVR1cmtlVkc3N3BDIiwiaWF0IjoxNzI3ODMwMTc4fQ.SZ5vwzaZbz3JN_DZ4S8e_jdpHTWUdL7pTOOQEb3xxfc",
    bearer: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoidXNlcl8yWkE2dnVLRDNJSlhqdTE2b0pWUUdMQmNXd2ciLCJvcmdfaWQiOiJvcmdfMmJXUTFGb1dDM1dybzM5MVR1cmtlVkc3N3BDIiwiaWF0IjoxNzI5MjQ5OTI2fQ.s4FjIDoPvM5Yzj9VHkoAawGL2al3hMq2J0tEk2EkegA",
    // serverURL: "https://api.comfydeploy.com/api",
    // serverURL: "https://staging.api.comfydeploy.com/api",
    serverURL: "http://localhost:3011/api",
});

async function sync() {
    const res = await cd.run.sync({
        deploymentId: "be1dda2a-f0d3-4db5-8a8d-90ae6634df50",
        inputs: {
            "positive_prompt": "beautiful scenery nature glass bottle landscape, , purple galaxy bottle,",
            "negative_prompt": "text, watermark"
        }
    })

    console.log(JSON.stringify(res, null, 2));
}

async function queue() {
    const queue = await cd.run.queue({
        // deploymentId: "be1dda2a-f0d3-4db5-8a8d-90ae6634df50",
        deploymentId: "e1ccde4e-c5d5-4eea-a736-89193b26a099",
        // webhook: "https://example.com/webhook",
        webhookIntermediateStatus: true,
        webhook: "https://sad-streets-camp.loca.lt/api/webhook",
        inputs: {
            "positive_prompt": "beautiful scenery nature glass bottle landscape, , purple galaxy bottle,",
            "negative_prompt": "text, watermark"
        }
    })

    console.log(queue);
}

async function stream() {
    const stream = await cd.run.stream({
        deploymentId: "be1dda2a-f0d3-4db5-8a8d-90ae6634df50",
        inputs: {
            "positive_prompt": "beautiful scenery nature glass bottle landscape, , purple galaxy bottle,",
            "negative_prompt": "text, watermark"
        },
    })

    for await (const event of stream) {
        switch (event.event) {
            case "event_update":
                if (event.data.event === "executed") {
                    console.log(JSON.stringify(event.data.data, null, 2));
                }
                break;
            case "log_update":
                console.log(event.data.logs);
                break;
        }
    }
}

// async function listDeployments() {
//     const deployments = await cd.deployments.list({
//         environment: "production",
//     })

//     // deployments[0].inputTypes[0].

//     console.log(deployments);
// }

// await listDeployments();

// const session = await cd.session.create(
//     {
//         // machineId: "d30c4600-4e97-4b0a-b8be-fdf803fac38c",
//         comfyUICommit: "main",
//         customNodes: [
//             {
//                 id: "node-1",
//                 name: "Node 1",
//                 type: "cpu",
//                 count: 1,
//             }
//         ],
//         [
//             models: ...
//         ],
//         gpu: "H200",
//         waitForServer: true,
//     }
// )

// console.log(session);

// // Wait for 5 seconds
// await new Promise(resolve => setTimeout(resolve, 5000));

// // Cancel the session
// try {
//     await cd.session.cancel({
//         sessionId: session.sessionId
//     });
//     console.log("Session cancelled successfully");
// } catch (error) {
//     console.error("Error cancelling session:", error);
// }

// const a = await cd.file.upload({
//     file: new File([], "test.png"),
// })

// await queue();

// const a = await cd.run.get({
//     runId: "e2f37d05-a819-4e73-b8c0-b32cf62982ce",
// });

// console.log(JSON.stringify(a, null, 2));

import { WorkflowRunWebhookBody$inboundSchema } from "./src/models/components";

// import { RunUpdatesRequestBody$inboundSchema } from "comfydeploy/models/webhook";
