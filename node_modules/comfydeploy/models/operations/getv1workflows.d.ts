import * as z from "zod";
export type GetV1WorkflowsRequest = {
    page?: string | undefined;
    pageSize?: string | undefined;
    search?: string | undefined;
};
export type User = {
    name: string;
};
export type Versions = {
    id: string;
    version: number;
};
export type GetV1WorkflowsResponseBody = {
    id: string;
    updatedAt: string;
    name: string;
    selectedMachineId: string | null;
    count: string;
    user: User;
    versions: Array<Versions>;
    deployments: Array<any>;
    runs: Array<any>;
};
/** @internal */
export declare const GetV1WorkflowsRequest$inboundSchema: z.ZodType<GetV1WorkflowsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsRequest$Outbound = {
    page: string;
    pageSize: string;
    search?: string | undefined;
};
/** @internal */
export declare const GetV1WorkflowsRequest$outboundSchema: z.ZodType<GetV1WorkflowsRequest$Outbound, z.ZodTypeDef, GetV1WorkflowsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsRequest$ {
    /** @deprecated use `GetV1WorkflowsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsRequest$Outbound, z.ZodTypeDef, GetV1WorkflowsRequest>;
    /** @deprecated use `GetV1WorkflowsRequest$Outbound` instead. */
    type Outbound = GetV1WorkflowsRequest$Outbound;
}
/** @internal */
export declare const User$inboundSchema: z.ZodType<User, z.ZodTypeDef, unknown>;
/** @internal */
export type User$Outbound = {
    name: string;
};
/** @internal */
export declare const User$outboundSchema: z.ZodType<User$Outbound, z.ZodTypeDef, User>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace User$ {
    /** @deprecated use `User$inboundSchema` instead. */
    const inboundSchema: z.ZodType<User, z.ZodTypeDef, unknown>;
    /** @deprecated use `User$outboundSchema` instead. */
    const outboundSchema: z.ZodType<User$Outbound, z.ZodTypeDef, User>;
    /** @deprecated use `User$Outbound` instead. */
    type Outbound = User$Outbound;
}
/** @internal */
export declare const Versions$inboundSchema: z.ZodType<Versions, z.ZodTypeDef, unknown>;
/** @internal */
export type Versions$Outbound = {
    id: string;
    version: number;
};
/** @internal */
export declare const Versions$outboundSchema: z.ZodType<Versions$Outbound, z.ZodTypeDef, Versions>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Versions$ {
    /** @deprecated use `Versions$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Versions, z.ZodTypeDef, unknown>;
    /** @deprecated use `Versions$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Versions$Outbound, z.ZodTypeDef, Versions>;
    /** @deprecated use `Versions$Outbound` instead. */
    type Outbound = Versions$Outbound;
}
/** @internal */
export declare const GetV1WorkflowsResponseBody$inboundSchema: z.ZodType<GetV1WorkflowsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsResponseBody$Outbound = {
    id: string;
    updated_at: string;
    name: string;
    selected_machine_id: string | null;
    count: string;
    user: User$Outbound;
    versions: Array<Versions$Outbound>;
    deployments: Array<any>;
    runs: Array<any>;
};
/** @internal */
export declare const GetV1WorkflowsResponseBody$outboundSchema: z.ZodType<GetV1WorkflowsResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsResponseBody$ {
    /** @deprecated use `GetV1WorkflowsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsResponseBody>;
    /** @deprecated use `GetV1WorkflowsResponseBody$Outbound` instead. */
    type Outbound = GetV1WorkflowsResponseBody$Outbound;
}
//# sourceMappingURL=getv1workflows.d.ts.map