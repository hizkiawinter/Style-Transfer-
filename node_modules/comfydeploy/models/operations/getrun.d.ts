import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export type GetRunRequest = {
    runId: string;
};
export type WorkflowInputs = {};
export type GetRunWorkflowApi = {};
export declare const Origin: {
    readonly Manual: "manual";
    readonly Api: "api";
    readonly PublicShare: "public-share";
    readonly PublicTemplate: "public-template";
    readonly Workspace: "workspace";
};
export type Origin = ClosedEnum<typeof Origin>;
export declare const GetRunStatus: {
    readonly NotStarted: "not-started";
    readonly Running: "running";
    readonly Uploading: "uploading";
    readonly Success: "success";
    readonly Failed: "failed";
    readonly Started: "started";
    readonly Queued: "queued";
    readonly Timeout: "timeout";
    readonly Cancelled: "cancelled";
};
export type GetRunStatus = ClosedEnum<typeof GetRunStatus>;
export declare const GetRunGpu: {
    readonly T4: "T4";
    readonly L4: "L4";
    readonly A10G: "A10G";
    readonly A100: "A100";
    readonly A10080Gb: "A100-80GB";
    readonly H100: "H100";
};
export type GetRunGpu = ClosedEnum<typeof GetRunGpu>;
export declare const MachineType: {
    readonly Classic: "classic";
    readonly RunpodServerless: "runpod-serverless";
    readonly ModalServerless: "modal-serverless";
    readonly ComfyDeployServerless: "comfy-deploy-serverless";
    readonly Workspace: "workspace";
    readonly WorkspaceV2: "workspace-v2";
};
export type MachineType = ClosedEnum<typeof MachineType>;
export type RunLog = {};
export declare const WebhookStatus: {
    readonly Success: "success";
    readonly Failed: "failed";
    readonly NotStarted: "not-started";
    readonly Running: "running";
};
export type WebhookStatus = ClosedEnum<typeof WebhookStatus>;
export type Images = {
    url: string;
    filename: string;
};
export type GetRunFiles = {
    url: string;
    filename: string;
};
export type Gifs = {
    url: string;
    filename: string;
};
export type Data = {
    images?: Array<Images> | undefined;
    files?: Array<GetRunFiles> | undefined;
    gifs?: Array<Gifs> | undefined;
    text?: Array<string> | undefined;
};
export type Outputs = {
    data: Data;
};
/**
 * Retrieve the output
 */
export type GetRunResponseBody = {
    id: string;
    workflowVersionId: string | null;
    workflowInputs: WorkflowInputs | null;
    workflowId: string | null;
    workflowApi?: GetRunWorkflowApi | null | undefined;
    machineId: string | null;
    origin: Origin;
    status: GetRunStatus;
    endedAt: string | null;
    createdAt: string;
    updatedAt: string;
    queuedAt: string | null;
    startedAt: string | null;
    gpuEventId: string | null;
    gpu: GetRunGpu | null;
    machineVersion: string | null;
    machineType: MachineType | null;
    modalFunctionCallId: string | null;
    userId: string | null;
    orgId: string | null;
    runLog?: RunLog | undefined;
    liveStatus: string | null;
    progress: number;
    isRealtime: boolean;
    webhook: string | null;
    webhookStatus: WebhookStatus | null;
    webhookIntermediateStatus: boolean;
    batchId: string | null;
    favorite: boolean;
    outputs?: Array<Outputs> | null | undefined;
};
/** @internal */
export declare const GetRunRequest$inboundSchema: z.ZodType<GetRunRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRunRequest$Outbound = {
    run_id: string;
};
/** @internal */
export declare const GetRunRequest$outboundSchema: z.ZodType<GetRunRequest$Outbound, z.ZodTypeDef, GetRunRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRunRequest$ {
    /** @deprecated use `GetRunRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRunRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRunRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRunRequest$Outbound, z.ZodTypeDef, GetRunRequest>;
    /** @deprecated use `GetRunRequest$Outbound` instead. */
    type Outbound = GetRunRequest$Outbound;
}
/** @internal */
export declare const WorkflowInputs$inboundSchema: z.ZodType<WorkflowInputs, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkflowInputs$Outbound = {};
/** @internal */
export declare const WorkflowInputs$outboundSchema: z.ZodType<WorkflowInputs$Outbound, z.ZodTypeDef, WorkflowInputs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkflowInputs$ {
    /** @deprecated use `WorkflowInputs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkflowInputs, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkflowInputs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkflowInputs$Outbound, z.ZodTypeDef, WorkflowInputs>;
    /** @deprecated use `WorkflowInputs$Outbound` instead. */
    type Outbound = WorkflowInputs$Outbound;
}
/** @internal */
export declare const GetRunWorkflowApi$inboundSchema: z.ZodType<GetRunWorkflowApi, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRunWorkflowApi$Outbound = {};
/** @internal */
export declare const GetRunWorkflowApi$outboundSchema: z.ZodType<GetRunWorkflowApi$Outbound, z.ZodTypeDef, GetRunWorkflowApi>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRunWorkflowApi$ {
    /** @deprecated use `GetRunWorkflowApi$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRunWorkflowApi, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRunWorkflowApi$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRunWorkflowApi$Outbound, z.ZodTypeDef, GetRunWorkflowApi>;
    /** @deprecated use `GetRunWorkflowApi$Outbound` instead. */
    type Outbound = GetRunWorkflowApi$Outbound;
}
/** @internal */
export declare const Origin$inboundSchema: z.ZodNativeEnum<typeof Origin>;
/** @internal */
export declare const Origin$outboundSchema: z.ZodNativeEnum<typeof Origin>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Origin$ {
    /** @deprecated use `Origin$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Manual: "manual";
        readonly Api: "api";
        readonly PublicShare: "public-share";
        readonly PublicTemplate: "public-template";
        readonly Workspace: "workspace";
    }>;
    /** @deprecated use `Origin$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Manual: "manual";
        readonly Api: "api";
        readonly PublicShare: "public-share";
        readonly PublicTemplate: "public-template";
        readonly Workspace: "workspace";
    }>;
}
/** @internal */
export declare const GetRunStatus$inboundSchema: z.ZodNativeEnum<typeof GetRunStatus>;
/** @internal */
export declare const GetRunStatus$outboundSchema: z.ZodNativeEnum<typeof GetRunStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRunStatus$ {
    /** @deprecated use `GetRunStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly NotStarted: "not-started";
        readonly Running: "running";
        readonly Uploading: "uploading";
        readonly Success: "success";
        readonly Failed: "failed";
        readonly Started: "started";
        readonly Queued: "queued";
        readonly Timeout: "timeout";
        readonly Cancelled: "cancelled";
    }>;
    /** @deprecated use `GetRunStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly NotStarted: "not-started";
        readonly Running: "running";
        readonly Uploading: "uploading";
        readonly Success: "success";
        readonly Failed: "failed";
        readonly Started: "started";
        readonly Queued: "queued";
        readonly Timeout: "timeout";
        readonly Cancelled: "cancelled";
    }>;
}
/** @internal */
export declare const GetRunGpu$inboundSchema: z.ZodNativeEnum<typeof GetRunGpu>;
/** @internal */
export declare const GetRunGpu$outboundSchema: z.ZodNativeEnum<typeof GetRunGpu>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRunGpu$ {
    /** @deprecated use `GetRunGpu$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly T4: "T4";
        readonly L4: "L4";
        readonly A10G: "A10G";
        readonly A100: "A100";
        readonly A10080Gb: "A100-80GB";
        readonly H100: "H100";
    }>;
    /** @deprecated use `GetRunGpu$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly T4: "T4";
        readonly L4: "L4";
        readonly A10G: "A10G";
        readonly A100: "A100";
        readonly A10080Gb: "A100-80GB";
        readonly H100: "H100";
    }>;
}
/** @internal */
export declare const MachineType$inboundSchema: z.ZodNativeEnum<typeof MachineType>;
/** @internal */
export declare const MachineType$outboundSchema: z.ZodNativeEnum<typeof MachineType>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MachineType$ {
    /** @deprecated use `MachineType$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Classic: "classic";
        readonly RunpodServerless: "runpod-serverless";
        readonly ModalServerless: "modal-serverless";
        readonly ComfyDeployServerless: "comfy-deploy-serverless";
        readonly Workspace: "workspace";
        readonly WorkspaceV2: "workspace-v2";
    }>;
    /** @deprecated use `MachineType$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Classic: "classic";
        readonly RunpodServerless: "runpod-serverless";
        readonly ModalServerless: "modal-serverless";
        readonly ComfyDeployServerless: "comfy-deploy-serverless";
        readonly Workspace: "workspace";
        readonly WorkspaceV2: "workspace-v2";
    }>;
}
/** @internal */
export declare const RunLog$inboundSchema: z.ZodType<RunLog, z.ZodTypeDef, unknown>;
/** @internal */
export type RunLog$Outbound = {};
/** @internal */
export declare const RunLog$outboundSchema: z.ZodType<RunLog$Outbound, z.ZodTypeDef, RunLog>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RunLog$ {
    /** @deprecated use `RunLog$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RunLog, z.ZodTypeDef, unknown>;
    /** @deprecated use `RunLog$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RunLog$Outbound, z.ZodTypeDef, RunLog>;
    /** @deprecated use `RunLog$Outbound` instead. */
    type Outbound = RunLog$Outbound;
}
/** @internal */
export declare const WebhookStatus$inboundSchema: z.ZodNativeEnum<typeof WebhookStatus>;
/** @internal */
export declare const WebhookStatus$outboundSchema: z.ZodNativeEnum<typeof WebhookStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WebhookStatus$ {
    /** @deprecated use `WebhookStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Success: "success";
        readonly Failed: "failed";
        readonly NotStarted: "not-started";
        readonly Running: "running";
    }>;
    /** @deprecated use `WebhookStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Success: "success";
        readonly Failed: "failed";
        readonly NotStarted: "not-started";
        readonly Running: "running";
    }>;
}
/** @internal */
export declare const Images$inboundSchema: z.ZodType<Images, z.ZodTypeDef, unknown>;
/** @internal */
export type Images$Outbound = {
    url: string;
    filename: string;
};
/** @internal */
export declare const Images$outboundSchema: z.ZodType<Images$Outbound, z.ZodTypeDef, Images>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Images$ {
    /** @deprecated use `Images$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Images, z.ZodTypeDef, unknown>;
    /** @deprecated use `Images$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Images$Outbound, z.ZodTypeDef, Images>;
    /** @deprecated use `Images$Outbound` instead. */
    type Outbound = Images$Outbound;
}
/** @internal */
export declare const GetRunFiles$inboundSchema: z.ZodType<GetRunFiles, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRunFiles$Outbound = {
    url: string;
    filename: string;
};
/** @internal */
export declare const GetRunFiles$outboundSchema: z.ZodType<GetRunFiles$Outbound, z.ZodTypeDef, GetRunFiles>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRunFiles$ {
    /** @deprecated use `GetRunFiles$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRunFiles, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRunFiles$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRunFiles$Outbound, z.ZodTypeDef, GetRunFiles>;
    /** @deprecated use `GetRunFiles$Outbound` instead. */
    type Outbound = GetRunFiles$Outbound;
}
/** @internal */
export declare const Gifs$inboundSchema: z.ZodType<Gifs, z.ZodTypeDef, unknown>;
/** @internal */
export type Gifs$Outbound = {
    url: string;
    filename: string;
};
/** @internal */
export declare const Gifs$outboundSchema: z.ZodType<Gifs$Outbound, z.ZodTypeDef, Gifs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Gifs$ {
    /** @deprecated use `Gifs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Gifs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Gifs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Gifs$Outbound, z.ZodTypeDef, Gifs>;
    /** @deprecated use `Gifs$Outbound` instead. */
    type Outbound = Gifs$Outbound;
}
/** @internal */
export declare const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
/** @internal */
export type Data$Outbound = {
    images?: Array<Images$Outbound> | undefined;
    files?: Array<GetRunFiles$Outbound> | undefined;
    gifs?: Array<Gifs$Outbound> | undefined;
    text?: Array<string> | undefined;
};
/** @internal */
export declare const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Data$ {
    /** @deprecated use `Data$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
    /** @deprecated use `Data$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
    /** @deprecated use `Data$Outbound` instead. */
    type Outbound = Data$Outbound;
}
/** @internal */
export declare const Outputs$inboundSchema: z.ZodType<Outputs, z.ZodTypeDef, unknown>;
/** @internal */
export type Outputs$Outbound = {
    data: Data$Outbound;
};
/** @internal */
export declare const Outputs$outboundSchema: z.ZodType<Outputs$Outbound, z.ZodTypeDef, Outputs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Outputs$ {
    /** @deprecated use `Outputs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Outputs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Outputs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Outputs$Outbound, z.ZodTypeDef, Outputs>;
    /** @deprecated use `Outputs$Outbound` instead. */
    type Outbound = Outputs$Outbound;
}
/** @internal */
export declare const GetRunResponseBody$inboundSchema: z.ZodType<GetRunResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetRunResponseBody$Outbound = {
    id: string;
    workflow_version_id: string | null;
    workflow_inputs: WorkflowInputs$Outbound | null;
    workflow_id: string | null;
    workflow_api?: GetRunWorkflowApi$Outbound | null | undefined;
    machine_id: string | null;
    origin: string;
    status: string;
    ended_at: string | null;
    created_at: string;
    updated_at: string;
    queued_at: string | null;
    started_at: string | null;
    gpu_event_id: string | null;
    gpu: string | null;
    machine_version: string | null;
    machine_type: string | null;
    modal_function_call_id: string | null;
    user_id: string | null;
    org_id: string | null;
    run_log?: RunLog$Outbound | undefined;
    live_status: string | null;
    progress: number;
    is_realtime: boolean;
    webhook: string | null;
    webhook_status: string | null;
    webhook_intermediate_status: boolean;
    batch_id: string | null;
    favorite: boolean;
    outputs?: Array<Outputs$Outbound> | null | undefined;
};
/** @internal */
export declare const GetRunResponseBody$outboundSchema: z.ZodType<GetRunResponseBody$Outbound, z.ZodTypeDef, GetRunResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetRunResponseBody$ {
    /** @deprecated use `GetRunResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetRunResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetRunResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetRunResponseBody$Outbound, z.ZodTypeDef, GetRunResponseBody>;
    /** @deprecated use `GetRunResponseBody$Outbound` instead. */
    type Outbound = GetRunResponseBody$Outbound;
}
//# sourceMappingURL=getrun.d.ts.map