import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const Gpu: {
    readonly T4: "T4";
    readonly L4: "L4";
    readonly A10G: "A10G";
    readonly A100: "A100";
    readonly A10080Gb: "A100-80GB";
    readonly H100: "H100";
};
export type Gpu = ClosedEnum<typeof Gpu>;
export declare const RunOrigin: {
    readonly Manual: "manual";
    readonly Api: "api";
    readonly PublicShare: "public-share";
    readonly PublicTemplate: "public-template";
    readonly Workspace: "workspace";
};
export type RunOrigin = ClosedEnum<typeof RunOrigin>;
export type Inputs = string | number;
/**
 * Run options
 */
export type PostRunRequestBody = {
    /**
     * Deployment ID to run
     */
    deploymentId?: string | undefined;
    /**
     * Workflow API JSON to run
     */
    workflowApi?: any | undefined;
    /**
     * Workflow API JSON to run
     */
    workflowApiJson?: string | undefined;
    /**
     * Workflow ID to run
     */
    workflowId?: string | undefined;
    machineId?: string | undefined;
    gpu?: Gpu | undefined;
    concurrencyLimit?: number | undefined;
    privateVolumeName?: string | undefined;
    timeout?: number | undefined;
    runOrigin?: RunOrigin | undefined;
    /**
     * External inputs to the workflow
     */
    inputs?: {
        [k: string]: string | number;
    } | undefined;
    /**
     * External inputs to the workflow in JSON format
     */
    inputsJson?: string | undefined;
    /**
     * Webhook URL to receive workflow updates
     */
    webhook?: string | undefined;
    /**
     * Whether to send webhook on intermediate status
     */
    webhookIntermediateStatus?: boolean | undefined;
    /**
     * Whether to return a streaming url
     */
    stream?: boolean | undefined;
    /**
     * Batch number to run
     */
    batchNumber?: number | undefined;
};
/**
 * Workflow queued
 */
export type PostRunResponseBody = {
    runId: string;
};
/** @internal */
export declare const Gpu$inboundSchema: z.ZodNativeEnum<typeof Gpu>;
/** @internal */
export declare const Gpu$outboundSchema: z.ZodNativeEnum<typeof Gpu>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Gpu$ {
    /** @deprecated use `Gpu$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly T4: "T4";
        readonly L4: "L4";
        readonly A10G: "A10G";
        readonly A100: "A100";
        readonly A10080Gb: "A100-80GB";
        readonly H100: "H100";
    }>;
    /** @deprecated use `Gpu$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly T4: "T4";
        readonly L4: "L4";
        readonly A10G: "A10G";
        readonly A100: "A100";
        readonly A10080Gb: "A100-80GB";
        readonly H100: "H100";
    }>;
}
/** @internal */
export declare const RunOrigin$inboundSchema: z.ZodNativeEnum<typeof RunOrigin>;
/** @internal */
export declare const RunOrigin$outboundSchema: z.ZodNativeEnum<typeof RunOrigin>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RunOrigin$ {
    /** @deprecated use `RunOrigin$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Manual: "manual";
        readonly Api: "api";
        readonly PublicShare: "public-share";
        readonly PublicTemplate: "public-template";
        readonly Workspace: "workspace";
    }>;
    /** @deprecated use `RunOrigin$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Manual: "manual";
        readonly Api: "api";
        readonly PublicShare: "public-share";
        readonly PublicTemplate: "public-template";
        readonly Workspace: "workspace";
    }>;
}
/** @internal */
export declare const Inputs$inboundSchema: z.ZodType<Inputs, z.ZodTypeDef, unknown>;
/** @internal */
export type Inputs$Outbound = string | number;
/** @internal */
export declare const Inputs$outboundSchema: z.ZodType<Inputs$Outbound, z.ZodTypeDef, Inputs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Inputs$ {
    /** @deprecated use `Inputs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Inputs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Inputs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Inputs$Outbound, z.ZodTypeDef, Inputs>;
    /** @deprecated use `Inputs$Outbound` instead. */
    type Outbound = Inputs$Outbound;
}
/** @internal */
export declare const PostRunRequestBody$inboundSchema: z.ZodType<PostRunRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PostRunRequestBody$Outbound = {
    deployment_id?: string | undefined;
    workflow_api?: any | undefined;
    workflow_api_json?: string | undefined;
    workflow_id?: string | undefined;
    machine_id?: string | undefined;
    gpu?: string | undefined;
    concurrency_limit?: number | undefined;
    private_volume_name?: string | undefined;
    timeout?: number | undefined;
    run_origin?: string | undefined;
    inputs?: {
        [k: string]: string | number;
    } | undefined;
    inputs_json?: string | undefined;
    webhook?: string | undefined;
    webhook_intermediate_status?: boolean | undefined;
    stream?: boolean | undefined;
    batch_number: number;
};
/** @internal */
export declare const PostRunRequestBody$outboundSchema: z.ZodType<PostRunRequestBody$Outbound, z.ZodTypeDef, PostRunRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostRunRequestBody$ {
    /** @deprecated use `PostRunRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostRunRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostRunRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostRunRequestBody$Outbound, z.ZodTypeDef, PostRunRequestBody>;
    /** @deprecated use `PostRunRequestBody$Outbound` instead. */
    type Outbound = PostRunRequestBody$Outbound;
}
/** @internal */
export declare const PostRunResponseBody$inboundSchema: z.ZodType<PostRunResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PostRunResponseBody$Outbound = {
    run_id: string;
};
/** @internal */
export declare const PostRunResponseBody$outboundSchema: z.ZodType<PostRunResponseBody$Outbound, z.ZodTypeDef, PostRunResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostRunResponseBody$ {
    /** @deprecated use `PostRunResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostRunResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostRunResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostRunResponseBody$Outbound, z.ZodTypeDef, PostRunResponseBody>;
    /** @deprecated use `PostRunResponseBody$Outbound` instead. */
    type Outbound = PostRunResponseBody$Outbound;
}
//# sourceMappingURL=postrun.d.ts.map