"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetV1WorkflowsResponseBody$ = exports.GetV1WorkflowsResponseBody$outboundSchema = exports.GetV1WorkflowsResponseBody$inboundSchema = exports.Versions$ = exports.Versions$outboundSchema = exports.Versions$inboundSchema = exports.User$ = exports.User$outboundSchema = exports.User$inboundSchema = exports.GetV1WorkflowsRequest$ = exports.GetV1WorkflowsRequest$outboundSchema = exports.GetV1WorkflowsRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
/** @internal */
exports.GetV1WorkflowsRequest$inboundSchema = z.object({
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    search: z.string().optional(),
});
/** @internal */
exports.GetV1WorkflowsRequest$outboundSchema = z.object({
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    search: z.string().optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsRequest$;
(function (GetV1WorkflowsRequest$) {
    /** @deprecated use `GetV1WorkflowsRequest$inboundSchema` instead. */
    GetV1WorkflowsRequest$.inboundSchema = exports.GetV1WorkflowsRequest$inboundSchema;
    /** @deprecated use `GetV1WorkflowsRequest$outboundSchema` instead. */
    GetV1WorkflowsRequest$.outboundSchema = exports.GetV1WorkflowsRequest$outboundSchema;
})(GetV1WorkflowsRequest$ || (exports.GetV1WorkflowsRequest$ = GetV1WorkflowsRequest$ = {}));
/** @internal */
exports.User$inboundSchema = z
    .object({
    name: z.string(),
});
/** @internal */
exports.User$outboundSchema = z.object({
    name: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var User$;
(function (User$) {
    /** @deprecated use `User$inboundSchema` instead. */
    User$.inboundSchema = exports.User$inboundSchema;
    /** @deprecated use `User$outboundSchema` instead. */
    User$.outboundSchema = exports.User$outboundSchema;
})(User$ || (exports.User$ = User$ = {}));
/** @internal */
exports.Versions$inboundSchema = z.object({
    id: z.string(),
    version: z.number(),
});
/** @internal */
exports.Versions$outboundSchema = z.object({
    id: z.string(),
    version: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Versions$;
(function (Versions$) {
    /** @deprecated use `Versions$inboundSchema` instead. */
    Versions$.inboundSchema = exports.Versions$inboundSchema;
    /** @deprecated use `Versions$outboundSchema` instead. */
    Versions$.outboundSchema = exports.Versions$outboundSchema;
})(Versions$ || (exports.Versions$ = Versions$ = {}));
/** @internal */
exports.GetV1WorkflowsResponseBody$inboundSchema = z.object({
    id: z.string(),
    updated_at: z.string(),
    name: z.string(),
    selected_machine_id: z.nullable(z.string()),
    count: z.string(),
    user: z.lazy(() => exports.User$inboundSchema),
    versions: z.array(z.lazy(() => exports.Versions$inboundSchema)),
    deployments: z.array(z.any()),
    runs: z.array(z.any()),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "updated_at": "updatedAt",
        "selected_machine_id": "selectedMachineId",
    });
});
/** @internal */
exports.GetV1WorkflowsResponseBody$outboundSchema = z.object({
    id: z.string(),
    updatedAt: z.string(),
    name: z.string(),
    selectedMachineId: z.nullable(z.string()),
    count: z.string(),
    user: z.lazy(() => exports.User$outboundSchema),
    versions: z.array(z.lazy(() => exports.Versions$outboundSchema)),
    deployments: z.array(z.any()),
    runs: z.array(z.any()),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        updatedAt: "updated_at",
        selectedMachineId: "selected_machine_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsResponseBody$;
(function (GetV1WorkflowsResponseBody$) {
    /** @deprecated use `GetV1WorkflowsResponseBody$inboundSchema` instead. */
    GetV1WorkflowsResponseBody$.inboundSchema = exports.GetV1WorkflowsResponseBody$inboundSchema;
    /** @deprecated use `GetV1WorkflowsResponseBody$outboundSchema` instead. */
    GetV1WorkflowsResponseBody$.outboundSchema = exports.GetV1WorkflowsResponseBody$outboundSchema;
})(GetV1WorkflowsResponseBody$ || (exports.GetV1WorkflowsResponseBody$ = GetV1WorkflowsResponseBody$ = {}));
//# sourceMappingURL=getv1workflows.js.map