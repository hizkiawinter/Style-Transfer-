"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$ = exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsOutputs$ = exports.GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsRequest$ = exports.GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema = exports.QueryParamRunOrigin$ = exports.QueryParamRunOrigin$outboundSchema = exports.QueryParamRunOrigin$inboundSchema = exports.QueryParamRunOrigin = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
exports.QueryParamRunOrigin = {
    Manual: "manual",
    Api: "api",
    PublicShare: "public-share",
    PublicTemplate: "public-template",
    Workspace: "workspace",
};
/** @internal */
exports.QueryParamRunOrigin$inboundSchema = z.nativeEnum(exports.QueryParamRunOrigin);
/** @internal */
exports.QueryParamRunOrigin$outboundSchema = exports.QueryParamRunOrigin$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var QueryParamRunOrigin$;
(function (QueryParamRunOrigin$) {
    /** @deprecated use `QueryParamRunOrigin$inboundSchema` instead. */
    QueryParamRunOrigin$.inboundSchema = exports.QueryParamRunOrigin$inboundSchema;
    /** @deprecated use `QueryParamRunOrigin$outboundSchema` instead. */
    QueryParamRunOrigin$.outboundSchema = exports.QueryParamRunOrigin$outboundSchema;
})(QueryParamRunOrigin$ || (exports.QueryParamRunOrigin$ = QueryParamRunOrigin$ = {}));
/** @internal */
exports.GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema = z.object({
    workflow_id: z.string(),
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    search: z.string().optional(),
    runOrigin: exports.QueryParamRunOrigin$inboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workflow_id": "workflowId",
    });
});
/** @internal */
exports.GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema = z.object({
    workflowId: z.string(),
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    search: z.string().optional(),
    runOrigin: exports.QueryParamRunOrigin$outboundSchema.optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workflowId: "workflow_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsWorkflowIdOutputsRequest$;
(function (GetV1WorkflowsWorkflowIdOutputsRequest$) {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema` instead. */
    GetV1WorkflowsWorkflowIdOutputsRequest$.inboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema` instead. */
    GetV1WorkflowsWorkflowIdOutputsRequest$.outboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema;
})(GetV1WorkflowsWorkflowIdOutputsRequest$ || (exports.GetV1WorkflowsWorkflowIdOutputsRequest$ = GetV1WorkflowsWorkflowIdOutputsRequest$ = {}));
/** @internal */
exports.GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema = z.object({
    fileURLs: z.array(z.string()),
    runID: z.string(),
    duration: z.number(),
});
/** @internal */
exports.GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema = z.object({
    fileURLs: z.array(z.string()),
    runID: z.string(),
    duration: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsWorkflowIdOutputsOutputs$;
(function (GetV1WorkflowsWorkflowIdOutputsOutputs$) {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema` instead. */
    GetV1WorkflowsWorkflowIdOutputsOutputs$.inboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema` instead. */
    GetV1WorkflowsWorkflowIdOutputsOutputs$.outboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema;
})(GetV1WorkflowsWorkflowIdOutputsOutputs$ || (exports.GetV1WorkflowsWorkflowIdOutputsOutputs$ = GetV1WorkflowsWorkflowIdOutputsOutputs$ = {}));
/** @internal */
exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema = z.object({
    outputs: z.array(z.lazy(() => exports.GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema)),
    total: z.number(),
});
/** @internal */
exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema = z.object({
    outputs: z.array(z.lazy(() => exports.GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema)),
    total: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsWorkflowIdOutputsResponseBody$;
(function (GetV1WorkflowsWorkflowIdOutputsResponseBody$) {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema` instead. */
    GetV1WorkflowsWorkflowIdOutputsResponseBody$.inboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema` instead. */
    GetV1WorkflowsWorkflowIdOutputsResponseBody$.outboundSchema = exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema;
})(GetV1WorkflowsWorkflowIdOutputsResponseBody$ || (exports.GetV1WorkflowsWorkflowIdOutputsResponseBody$ = GetV1WorkflowsWorkflowIdOutputsResponseBody$ = {}));
//# sourceMappingURL=getv1workflowsworkflowidoutputs.js.map