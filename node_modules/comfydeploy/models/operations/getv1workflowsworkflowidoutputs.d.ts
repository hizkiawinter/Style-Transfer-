import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const QueryParamRunOrigin: {
    readonly Manual: "manual";
    readonly Api: "api";
    readonly PublicShare: "public-share";
    readonly PublicTemplate: "public-template";
    readonly Workspace: "workspace";
};
export type QueryParamRunOrigin = ClosedEnum<typeof QueryParamRunOrigin>;
export type GetV1WorkflowsWorkflowIdOutputsRequest = {
    workflowId: string;
    page?: string | undefined;
    pageSize?: string | undefined;
    search?: string | undefined;
    runOrigin?: QueryParamRunOrigin | undefined;
};
export type GetV1WorkflowsWorkflowIdOutputsOutputs = {
    fileURLs: Array<string>;
    runID: string;
    duration: number;
};
/**
 * Specific workflow retrieved successfully
 */
export type GetV1WorkflowsWorkflowIdOutputsResponseBody = {
    outputs: Array<GetV1WorkflowsWorkflowIdOutputsOutputs>;
    total: number;
};
/** @internal */
export declare const QueryParamRunOrigin$inboundSchema: z.ZodNativeEnum<typeof QueryParamRunOrigin>;
/** @internal */
export declare const QueryParamRunOrigin$outboundSchema: z.ZodNativeEnum<typeof QueryParamRunOrigin>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace QueryParamRunOrigin$ {
    /** @deprecated use `QueryParamRunOrigin$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Manual: "manual";
        readonly Api: "api";
        readonly PublicShare: "public-share";
        readonly PublicTemplate: "public-template";
        readonly Workspace: "workspace";
    }>;
    /** @deprecated use `QueryParamRunOrigin$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Manual: "manual";
        readonly Api: "api";
        readonly PublicShare: "public-share";
        readonly PublicTemplate: "public-template";
        readonly Workspace: "workspace";
    }>;
}
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsRequest$Outbound = {
    workflow_id: string;
    page: string;
    pageSize: string;
    search?: string | undefined;
    runOrigin?: string | undefined;
};
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsRequest$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsWorkflowIdOutputsRequest$ {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsRequest$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsRequest>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsRequest$Outbound` instead. */
    type Outbound = GetV1WorkflowsWorkflowIdOutputsRequest$Outbound;
}
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsOutputs, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound = {
    fileURLs: Array<string>;
    runID: string;
    duration: number;
};
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsOutputs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsWorkflowIdOutputsOutputs$ {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsOutputs, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsOutputs>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound` instead. */
    type Outbound = GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound;
}
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound = {
    outputs: Array<GetV1WorkflowsWorkflowIdOutputsOutputs$Outbound>;
    total: number;
};
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsWorkflowIdOutputsResponseBody$ {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsResponseBody>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound` instead. */
    type Outbound = GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound;
}
//# sourceMappingURL=getv1workflowsworkflowidoutputs.d.ts.map