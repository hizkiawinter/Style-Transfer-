"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetV1MachinesResponseBody$ = exports.GetV1MachinesResponseBody$outboundSchema = exports.GetV1MachinesResponseBody$inboundSchema = exports.Machines$ = exports.Machines$outboundSchema = exports.Machines$inboundSchema = exports.GetV1MachinesRequest$ = exports.GetV1MachinesRequest$outboundSchema = exports.GetV1MachinesRequest$inboundSchema = exports.Fields$ = exports.Fields$outboundSchema = exports.Fields$inboundSchema = exports.Fields = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
exports.Fields = {
    Full: "full",
    Minimal: "minimal",
};
/** @internal */
exports.Fields$inboundSchema = z
    .nativeEnum(exports.Fields);
/** @internal */
exports.Fields$outboundSchema = exports.Fields$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Fields$;
(function (Fields$) {
    /** @deprecated use `Fields$inboundSchema` instead. */
    Fields$.inboundSchema = exports.Fields$inboundSchema;
    /** @deprecated use `Fields$outboundSchema` instead. */
    Fields$.outboundSchema = exports.Fields$outboundSchema;
})(Fields$ || (exports.Fields$ = Fields$ = {}));
/** @internal */
exports.GetV1MachinesRequest$inboundSchema = z.object({
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    fields: exports.Fields$inboundSchema.default("minimal"),
});
/** @internal */
exports.GetV1MachinesRequest$outboundSchema = z.object({
    page: z.string().default("1"),
    pageSize: z.string().default("12"),
    fields: exports.Fields$outboundSchema.default("minimal"),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1MachinesRequest$;
(function (GetV1MachinesRequest$) {
    /** @deprecated use `GetV1MachinesRequest$inboundSchema` instead. */
    GetV1MachinesRequest$.inboundSchema = exports.GetV1MachinesRequest$inboundSchema;
    /** @deprecated use `GetV1MachinesRequest$outboundSchema` instead. */
    GetV1MachinesRequest$.outboundSchema = exports.GetV1MachinesRequest$outboundSchema;
})(GetV1MachinesRequest$ || (exports.GetV1MachinesRequest$ = GetV1MachinesRequest$ = {}));
/** @internal */
exports.Machines$inboundSchema = z.object({
    id: z.string(),
    name: z.string().optional(),
    type: z.string().optional(),
    status: z.string().optional(),
    created_at: z.string().optional(),
    updated_at: z.string().optional(),
    endpoints: z.array(z.string()),
    object_info: z.any().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "created_at": "createdAt",
        "updated_at": "updatedAt",
        "object_info": "objectInfo",
    });
});
/** @internal */
exports.Machines$outboundSchema = z.object({
    id: z.string(),
    name: z.string().optional(),
    type: z.string().optional(),
    status: z.string().optional(),
    createdAt: z.string().optional(),
    updatedAt: z.string().optional(),
    endpoints: z.array(z.string()),
    objectInfo: z.any().optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        createdAt: "created_at",
        updatedAt: "updated_at",
        objectInfo: "object_info",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Machines$;
(function (Machines$) {
    /** @deprecated use `Machines$inboundSchema` instead. */
    Machines$.inboundSchema = exports.Machines$inboundSchema;
    /** @deprecated use `Machines$outboundSchema` instead. */
    Machines$.outboundSchema = exports.Machines$outboundSchema;
})(Machines$ || (exports.Machines$ = Machines$ = {}));
/** @internal */
exports.GetV1MachinesResponseBody$inboundSchema = z.object({
    machines: z.array(z.lazy(() => exports.Machines$inboundSchema)),
    total: z.number(),
});
/** @internal */
exports.GetV1MachinesResponseBody$outboundSchema = z.object({
    machines: z.array(z.lazy(() => exports.Machines$outboundSchema)),
    total: z.number(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1MachinesResponseBody$;
(function (GetV1MachinesResponseBody$) {
    /** @deprecated use `GetV1MachinesResponseBody$inboundSchema` instead. */
    GetV1MachinesResponseBody$.inboundSchema = exports.GetV1MachinesResponseBody$inboundSchema;
    /** @deprecated use `GetV1MachinesResponseBody$outboundSchema` instead. */
    GetV1MachinesResponseBody$.outboundSchema = exports.GetV1MachinesResponseBody$outboundSchema;
})(GetV1MachinesResponseBody$ || (exports.GetV1MachinesResponseBody$ = GetV1MachinesResponseBody$ = {}));
//# sourceMappingURL=getv1machines.js.map