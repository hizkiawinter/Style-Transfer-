"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.UploadFileFileUploadPostRequest$ = exports.UploadFileFileUploadPostRequest$outboundSchema = exports.UploadFileFileUploadPostRequest$inboundSchema = exports.UploadType$ = exports.UploadType$outboundSchema = exports.UploadType$inboundSchema = exports.UploadType = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const components = __importStar(require("../components/index.js"));
exports.UploadType = {
    Input: "input",
    Output: "output",
};
/** @internal */
exports.UploadType$inboundSchema = z
    .nativeEnum(exports.UploadType);
/** @internal */
exports.UploadType$outboundSchema = exports.UploadType$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UploadType$;
(function (UploadType$) {
    /** @deprecated use `UploadType$inboundSchema` instead. */
    UploadType$.inboundSchema = exports.UploadType$inboundSchema;
    /** @deprecated use `UploadType$outboundSchema` instead. */
    UploadType$.outboundSchema = exports.UploadType$outboundSchema;
})(UploadType$ || (exports.UploadType$ = UploadType$ = {}));
/** @internal */
exports.UploadFileFileUploadPostRequest$inboundSchema = z.object({
    run_id: z.nullable(z.string()).optional(),
    upload_type: exports.UploadType$inboundSchema.default("input"),
    file_type: z.nullable(z.string()).optional(),
    Body_upload_file_file_upload_post: components.BodyUploadFileFileUploadPost$inboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "run_id": "runId",
        "upload_type": "uploadType",
        "file_type": "fileType",
        "Body_upload_file_file_upload_post": "bodyUploadFileFileUploadPost",
    });
});
/** @internal */
exports.UploadFileFileUploadPostRequest$outboundSchema = z.object({
    runId: z.nullable(z.string()).optional(),
    uploadType: exports.UploadType$outboundSchema.default("input"),
    fileType: z.nullable(z.string()).optional(),
    bodyUploadFileFileUploadPost: components.BodyUploadFileFileUploadPost$outboundSchema,
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        runId: "run_id",
        uploadType: "upload_type",
        fileType: "file_type",
        bodyUploadFileFileUploadPost: "Body_upload_file_file_upload_post",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var UploadFileFileUploadPostRequest$;
(function (UploadFileFileUploadPostRequest$) {
    /** @deprecated use `UploadFileFileUploadPostRequest$inboundSchema` instead. */
    UploadFileFileUploadPostRequest$.inboundSchema = exports.UploadFileFileUploadPostRequest$inboundSchema;
    /** @deprecated use `UploadFileFileUploadPostRequest$outboundSchema` instead. */
    UploadFileFileUploadPostRequest$.outboundSchema = exports.UploadFileFileUploadPostRequest$outboundSchema;
})(UploadFileFileUploadPostRequest$ || (exports.UploadFileFileUploadPostRequest$ = UploadFileFileUploadPostRequest$ = {}));
//# sourceMappingURL=uploadfilefileuploadpost.js.map