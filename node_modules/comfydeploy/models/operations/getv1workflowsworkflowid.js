"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.GetV1WorkflowsWorkflowIdResponseBody$ = exports.GetV1WorkflowsWorkflowIdResponseBody$outboundSchema = exports.GetV1WorkflowsWorkflowIdResponseBody$inboundSchema = exports.GetV1WorkflowsWorkflowIdVersions$ = exports.GetV1WorkflowsWorkflowIdVersions$outboundSchema = exports.GetV1WorkflowsWorkflowIdVersions$inboundSchema = exports.GetV1WorkflowsWorkflowIdRequest$ = exports.GetV1WorkflowsWorkflowIdRequest$outboundSchema = exports.GetV1WorkflowsWorkflowIdRequest$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
/** @internal */
exports.GetV1WorkflowsWorkflowIdRequest$inboundSchema = z.object({
    workflow_id: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workflow_id": "workflowId",
    });
});
/** @internal */
exports.GetV1WorkflowsWorkflowIdRequest$outboundSchema = z.object({
    workflowId: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workflowId: "workflow_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsWorkflowIdRequest$;
(function (GetV1WorkflowsWorkflowIdRequest$) {
    /** @deprecated use `GetV1WorkflowsWorkflowIdRequest$inboundSchema` instead. */
    GetV1WorkflowsWorkflowIdRequest$.inboundSchema = exports.GetV1WorkflowsWorkflowIdRequest$inboundSchema;
    /** @deprecated use `GetV1WorkflowsWorkflowIdRequest$outboundSchema` instead. */
    GetV1WorkflowsWorkflowIdRequest$.outboundSchema = exports.GetV1WorkflowsWorkflowIdRequest$outboundSchema;
})(GetV1WorkflowsWorkflowIdRequest$ || (exports.GetV1WorkflowsWorkflowIdRequest$ = GetV1WorkflowsWorkflowIdRequest$ = {}));
/** @internal */
exports.GetV1WorkflowsWorkflowIdVersions$inboundSchema = z.object({
    workflow_id: z.string(),
    id: z.string(),
    workflow: z.any().optional(),
    workflow_api: z.any().optional(),
    comment: z.nullable(z.string()),
    version: z.number(),
    snapshot: z.nullable(z.string()),
    dependencies: z.nullable(z.string()),
    created_at: z.string(),
    updated_at: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "workflow_id": "workflowId",
        "workflow_api": "workflowApi",
        "created_at": "createdAt",
        "updated_at": "updatedAt",
    });
});
/** @internal */
exports.GetV1WorkflowsWorkflowIdVersions$outboundSchema = z.object({
    workflowId: z.string(),
    id: z.string(),
    workflow: z.any().optional(),
    workflowApi: z.any().optional(),
    comment: z.nullable(z.string()),
    version: z.number(),
    snapshot: z.nullable(z.string()),
    dependencies: z.nullable(z.string()),
    createdAt: z.string(),
    updatedAt: z.string(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        workflowId: "workflow_id",
        workflowApi: "workflow_api",
        createdAt: "created_at",
        updatedAt: "updated_at",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsWorkflowIdVersions$;
(function (GetV1WorkflowsWorkflowIdVersions$) {
    /** @deprecated use `GetV1WorkflowsWorkflowIdVersions$inboundSchema` instead. */
    GetV1WorkflowsWorkflowIdVersions$.inboundSchema = exports.GetV1WorkflowsWorkflowIdVersions$inboundSchema;
    /** @deprecated use `GetV1WorkflowsWorkflowIdVersions$outboundSchema` instead. */
    GetV1WorkflowsWorkflowIdVersions$.outboundSchema = exports.GetV1WorkflowsWorkflowIdVersions$outboundSchema;
})(GetV1WorkflowsWorkflowIdVersions$ || (exports.GetV1WorkflowsWorkflowIdVersions$ = GetV1WorkflowsWorkflowIdVersions$ = {}));
/** @internal */
exports.GetV1WorkflowsWorkflowIdResponseBody$inboundSchema = z.object({
    name: z.string(),
    user_id: z.string(),
    org_id: z.string().optional(),
    id: z.string(),
    selected_machine_id: z.nullable(z.string()),
    created_at: z.string(),
    updated_at: z.string(),
    versions: z.array(z.lazy(() => exports.GetV1WorkflowsWorkflowIdVersions$inboundSchema)),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "user_id": "userId",
        "org_id": "orgId",
        "selected_machine_id": "selectedMachineId",
        "created_at": "createdAt",
        "updated_at": "updatedAt",
    });
});
/** @internal */
exports.GetV1WorkflowsWorkflowIdResponseBody$outboundSchema = z.object({
    name: z.string(),
    userId: z.string(),
    orgId: z.string().optional(),
    id: z.string(),
    selectedMachineId: z.nullable(z.string()),
    createdAt: z.string(),
    updatedAt: z.string(),
    versions: z.array(z.lazy(() => exports.GetV1WorkflowsWorkflowIdVersions$outboundSchema)),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        userId: "user_id",
        orgId: "org_id",
        selectedMachineId: "selected_machine_id",
        createdAt: "created_at",
        updatedAt: "updated_at",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var GetV1WorkflowsWorkflowIdResponseBody$;
(function (GetV1WorkflowsWorkflowIdResponseBody$) {
    /** @deprecated use `GetV1WorkflowsWorkflowIdResponseBody$inboundSchema` instead. */
    GetV1WorkflowsWorkflowIdResponseBody$.inboundSchema = exports.GetV1WorkflowsWorkflowIdResponseBody$inboundSchema;
    /** @deprecated use `GetV1WorkflowsWorkflowIdResponseBody$outboundSchema` instead. */
    GetV1WorkflowsWorkflowIdResponseBody$.outboundSchema = exports.GetV1WorkflowsWorkflowIdResponseBody$outboundSchema;
})(GetV1WorkflowsWorkflowIdResponseBody$ || (exports.GetV1WorkflowsWorkflowIdResponseBody$ = GetV1WorkflowsWorkflowIdResponseBody$ = {}));
//# sourceMappingURL=getv1workflowsworkflowid.js.map