import * as z from "zod";
export type CustomNode = {
    pip?: Array<string> | null | undefined;
    url: string;
    hash?: string | null | undefined;
    installType: string;
    files?: Array<string> | null | undefined;
    name?: string | null | undefined;
};
/** @internal */
export declare const CustomNode$inboundSchema: z.ZodType<CustomNode, z.ZodTypeDef, unknown>;
/** @internal */
export type CustomNode$Outbound = {
    pip?: Array<string> | null | undefined;
    url: string;
    hash?: string | null | undefined;
    install_type: string;
    files?: Array<string> | null | undefined;
    name?: string | null | undefined;
};
/** @internal */
export declare const CustomNode$outboundSchema: z.ZodType<CustomNode$Outbound, z.ZodTypeDef, CustomNode>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CustomNode$ {
    /** @deprecated use `CustomNode$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CustomNode, z.ZodTypeDef, unknown>;
    /** @deprecated use `CustomNode$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CustomNode$Outbound, z.ZodTypeDef, CustomNode>;
    /** @deprecated use `CustomNode$Outbound` instead. */
    type Outbound = CustomNode$Outbound;
}
//# sourceMappingURL=customnode.d.ts.map