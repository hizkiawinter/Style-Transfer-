import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const WorkflowRunStatus: {
    readonly NotStarted: "not-started";
    readonly Running: "running";
    readonly Uploading: "uploading";
    readonly Success: "success";
    readonly Failed: "failed";
    readonly Started: "started";
    readonly Queued: "queued";
    readonly Timeout: "timeout";
    readonly Cancelled: "cancelled";
};
export type WorkflowRunStatus = ClosedEnum<typeof WorkflowRunStatus>;
/** @internal */
export declare const WorkflowRunStatus$inboundSchema: z.ZodNativeEnum<typeof WorkflowRunStatus>;
/** @internal */
export declare const WorkflowRunStatus$outboundSchema: z.ZodNativeEnum<typeof WorkflowRunStatus>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkflowRunStatus$ {
    /** @deprecated use `WorkflowRunStatus$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly NotStarted: "not-started";
        readonly Running: "running";
        readonly Uploading: "uploading";
        readonly Success: "success";
        readonly Failed: "failed";
        readonly Started: "started";
        readonly Queued: "queued";
        readonly Timeout: "timeout";
        readonly Cancelled: "cancelled";
    }>;
    /** @deprecated use `WorkflowRunStatus$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly NotStarted: "not-started";
        readonly Running: "running";
        readonly Uploading: "uploading";
        readonly Success: "success";
        readonly Failed: "failed";
        readonly Started: "started";
        readonly Queued: "queued";
        readonly Timeout: "timeout";
        readonly Cancelled: "cancelled";
    }>;
}
//# sourceMappingURL=workflowrunstatus.d.ts.map