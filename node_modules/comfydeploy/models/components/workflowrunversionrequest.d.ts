import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const ExecutionMode: {
    readonly Async: "async";
    readonly Sync: "sync";
    readonly SyncFirstResult: "sync_first_result";
    readonly Stream: "stream";
};
export type ExecutionMode = ClosedEnum<typeof ExecutionMode>;
export type Inputs = string | number | number | boolean | Array<any>;
export type WorkflowRunVersionRequest = {
    executionMode?: ExecutionMode | null | undefined;
    inputs?: {
        [k: string]: string | number | number | boolean | Array<any>;
    } | null | undefined;
    webhook?: string | null | undefined;
    webhookIntermediateStatus?: boolean | null | undefined;
    origin?: string | null | undefined;
    batchNumber?: number | null | undefined;
    /**
     * Optional dictionary of batch input parameters. Keys are input names, values are lists of inputs.
     */
    batchInputParams?: {
        [k: string]: Array<any>;
    } | null | undefined;
    isNativeRun?: boolean | null | undefined;
    gpuEventId?: string | null | undefined;
    workflowVersionId: string;
    machineId?: string | null | undefined;
};
/** @internal */
export declare const ExecutionMode$inboundSchema: z.ZodNativeEnum<typeof ExecutionMode>;
/** @internal */
export declare const ExecutionMode$outboundSchema: z.ZodNativeEnum<typeof ExecutionMode>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ExecutionMode$ {
    /** @deprecated use `ExecutionMode$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly Async: "async";
        readonly Sync: "sync";
        readonly SyncFirstResult: "sync_first_result";
        readonly Stream: "stream";
    }>;
    /** @deprecated use `ExecutionMode$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly Async: "async";
        readonly Sync: "sync";
        readonly SyncFirstResult: "sync_first_result";
        readonly Stream: "stream";
    }>;
}
/** @internal */
export declare const Inputs$inboundSchema: z.ZodType<Inputs, z.ZodTypeDef, unknown>;
/** @internal */
export type Inputs$Outbound = string | number | number | boolean | Array<any>;
/** @internal */
export declare const Inputs$outboundSchema: z.ZodType<Inputs$Outbound, z.ZodTypeDef, Inputs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Inputs$ {
    /** @deprecated use `Inputs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Inputs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Inputs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Inputs$Outbound, z.ZodTypeDef, Inputs>;
    /** @deprecated use `Inputs$Outbound` instead. */
    type Outbound = Inputs$Outbound;
}
/** @internal */
export declare const WorkflowRunVersionRequest$inboundSchema: z.ZodType<WorkflowRunVersionRequest, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkflowRunVersionRequest$Outbound = {
    execution_mode?: string | null | undefined;
    inputs?: {
        [k: string]: string | number | number | boolean | Array<any>;
    } | null | undefined;
    webhook?: string | null | undefined;
    webhook_intermediate_status?: boolean | null | undefined;
    origin?: string | null | undefined;
    batch_number?: number | null | undefined;
    batch_input_params?: {
        [k: string]: Array<any>;
    } | null | undefined;
    is_native_run?: boolean | null | undefined;
    gpu_event_id?: string | null | undefined;
    workflow_version_id: string;
    machine_id?: string | null | undefined;
};
/** @internal */
export declare const WorkflowRunVersionRequest$outboundSchema: z.ZodType<WorkflowRunVersionRequest$Outbound, z.ZodTypeDef, WorkflowRunVersionRequest>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkflowRunVersionRequest$ {
    /** @deprecated use `WorkflowRunVersionRequest$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkflowRunVersionRequest, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkflowRunVersionRequest$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkflowRunVersionRequest$Outbound, z.ZodTypeDef, WorkflowRunVersionRequest>;
    /** @deprecated use `WorkflowRunVersionRequest$Outbound` instead. */
    type Outbound = WorkflowRunVersionRequest$Outbound;
}
//# sourceMappingURL=workflowrunversionrequest.d.ts.map