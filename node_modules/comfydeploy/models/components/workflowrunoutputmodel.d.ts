import * as z from "zod";
import { MediaItem, MediaItem$Outbound } from "./mediaitem.js";
export type Data = MediaItem | string;
export type WorkflowRunOutputModel = {
    id: string;
    runId: string;
    data: {
        [k: string]: Array<MediaItem | string>;
    };
    nodeMeta?: any | null | undefined;
    createdAt: Date;
    updatedAt: Date;
    type?: string | null | undefined;
    nodeId?: string | null | undefined;
};
/** @internal */
export declare const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
/** @internal */
export type Data$Outbound = MediaItem$Outbound | string;
/** @internal */
export declare const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Data$ {
    /** @deprecated use `Data$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
    /** @deprecated use `Data$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
    /** @deprecated use `Data$Outbound` instead. */
    type Outbound = Data$Outbound;
}
/** @internal */
export declare const WorkflowRunOutputModel$inboundSchema: z.ZodType<WorkflowRunOutputModel, z.ZodTypeDef, unknown>;
/** @internal */
export type WorkflowRunOutputModel$Outbound = {
    id: string;
    run_id: string;
    data: {
        [k: string]: Array<MediaItem$Outbound | string>;
    };
    node_meta?: any | null | undefined;
    created_at: string;
    updated_at: string;
    type?: string | null | undefined;
    node_id?: string | null | undefined;
};
/** @internal */
export declare const WorkflowRunOutputModel$outboundSchema: z.ZodType<WorkflowRunOutputModel$Outbound, z.ZodTypeDef, WorkflowRunOutputModel>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace WorkflowRunOutputModel$ {
    /** @deprecated use `WorkflowRunOutputModel$inboundSchema` instead. */
    const inboundSchema: z.ZodType<WorkflowRunOutputModel, z.ZodTypeDef, unknown>;
    /** @deprecated use `WorkflowRunOutputModel$outboundSchema` instead. */
    const outboundSchema: z.ZodType<WorkflowRunOutputModel$Outbound, z.ZodTypeDef, WorkflowRunOutputModel>;
    /** @deprecated use `WorkflowRunOutputModel$Outbound` instead. */
    type Outbound = WorkflowRunOutputModel$Outbound;
}
//# sourceMappingURL=workflowrunoutputmodel.d.ts.map