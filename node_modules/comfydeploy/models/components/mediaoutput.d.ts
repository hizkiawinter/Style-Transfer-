import * as z from "zod";
import { MediaItem, MediaItem$Outbound } from "./mediaitem.js";
export type MediaOutput = {
    images?: Array<MediaItem> | null | undefined;
    gifs?: Array<MediaItem> | null | undefined;
    videos?: Array<MediaItem> | null | undefined;
    other?: Array<MediaItem> | null | undefined;
};
/** @internal */
export declare const MediaOutput$inboundSchema: z.ZodType<MediaOutput, z.ZodTypeDef, unknown>;
/** @internal */
export type MediaOutput$Outbound = {
    images?: Array<MediaItem$Outbound> | null | undefined;
    gifs?: Array<MediaItem$Outbound> | null | undefined;
    videos?: Array<MediaItem$Outbound> | null | undefined;
    other?: Array<MediaItem$Outbound> | null | undefined;
};
/** @internal */
export declare const MediaOutput$outboundSchema: z.ZodType<MediaOutput$Outbound, z.ZodTypeDef, MediaOutput>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MediaOutput$ {
    /** @deprecated use `MediaOutput$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MediaOutput, z.ZodTypeDef, unknown>;
    /** @deprecated use `MediaOutput$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MediaOutput$Outbound, z.ZodTypeDef, MediaOutput>;
    /** @deprecated use `MediaOutput$Outbound` instead. */
    type Outbound = MediaOutput$Outbound;
}
//# sourceMappingURL=mediaoutput.d.ts.map