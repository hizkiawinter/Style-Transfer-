import * as z from "zod";
export type EventUpdate = {
    event?: string | null | undefined;
    data?: any | null | undefined;
};
/** @internal */
export declare const EventUpdate$inboundSchema: z.ZodType<EventUpdate, z.ZodTypeDef, unknown>;
/** @internal */
export type EventUpdate$Outbound = {
    event?: string | null | undefined;
    data?: any | null | undefined;
};
/** @internal */
export declare const EventUpdate$outboundSchema: z.ZodType<EventUpdate$Outbound, z.ZodTypeDef, EventUpdate>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace EventUpdate$ {
    /** @deprecated use `EventUpdate$inboundSchema` instead. */
    const inboundSchema: z.ZodType<EventUpdate, z.ZodTypeDef, unknown>;
    /** @deprecated use `EventUpdate$outboundSchema` instead. */
    const outboundSchema: z.ZodType<EventUpdate$Outbound, z.ZodTypeDef, EventUpdate>;
    /** @deprecated use `EventUpdate$Outbound` instead. */
    type Outbound = EventUpdate$Outbound;
}
//# sourceMappingURL=eventupdate.d.ts.map