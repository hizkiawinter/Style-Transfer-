"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.DeploymentModel$ = exports.DeploymentModel$outboundSchema = exports.DeploymentModel$inboundSchema = exports.ShowcaseMedia$ = exports.ShowcaseMedia$outboundSchema = exports.ShowcaseMedia$inboundSchema = exports.ShareOptions$ = exports.ShareOptions$outboundSchema = exports.ShareOptions$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const deploymentenvironment_js_1 = require("./deploymentenvironment.js");
const inputmodel_js_1 = require("./inputmodel.js");
const workflowwithname_js_1 = require("./workflowwithname.js");
/** @internal */
exports.ShareOptions$inboundSchema = z.object({});
/** @internal */
exports.ShareOptions$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ShareOptions$;
(function (ShareOptions$) {
    /** @deprecated use `ShareOptions$inboundSchema` instead. */
    ShareOptions$.inboundSchema = exports.ShareOptions$inboundSchema;
    /** @deprecated use `ShareOptions$outboundSchema` instead. */
    ShareOptions$.outboundSchema = exports.ShareOptions$outboundSchema;
})(ShareOptions$ || (exports.ShareOptions$ = ShareOptions$ = {}));
/** @internal */
exports.ShowcaseMedia$inboundSchema = z.object({});
/** @internal */
exports.ShowcaseMedia$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var ShowcaseMedia$;
(function (ShowcaseMedia$) {
    /** @deprecated use `ShowcaseMedia$inboundSchema` instead. */
    ShowcaseMedia$.inboundSchema = exports.ShowcaseMedia$inboundSchema;
    /** @deprecated use `ShowcaseMedia$outboundSchema` instead. */
    ShowcaseMedia$.outboundSchema = exports.ShowcaseMedia$outboundSchema;
})(ShowcaseMedia$ || (exports.ShowcaseMedia$ = ShowcaseMedia$ = {}));
/** @internal */
exports.DeploymentModel$inboundSchema = z.object({
    id: z.string(),
    user_id: z.string(),
    org_id: z.nullable(z.string()),
    workflow_version_id: z.string(),
    workflow_id: z.string(),
    machine_id: z.string(),
    share_slug: z.nullable(z.string()),
    description: z.nullable(z.string()),
    share_options: z.nullable(z.lazy(() => exports.ShareOptions$inboundSchema)),
    showcase_media: z.nullable(z.lazy(() => exports.ShowcaseMedia$inboundSchema)),
    environment: deploymentenvironment_js_1.DeploymentEnvironment$inboundSchema,
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    workflow: workflowwithname_js_1.WorkflowWithName$inboundSchema,
    input_types: z.nullable(z.array(inputmodel_js_1.InputModel$inboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "user_id": "userId",
        "org_id": "orgId",
        "workflow_version_id": "workflowVersionId",
        "workflow_id": "workflowId",
        "machine_id": "machineId",
        "share_slug": "shareSlug",
        "share_options": "shareOptions",
        "showcase_media": "showcaseMedia",
        "created_at": "createdAt",
        "updated_at": "updatedAt",
        "input_types": "inputTypes",
    });
});
/** @internal */
exports.DeploymentModel$outboundSchema = z.object({
    id: z.string(),
    userId: z.string(),
    orgId: z.nullable(z.string()),
    workflowVersionId: z.string(),
    workflowId: z.string(),
    machineId: z.string(),
    shareSlug: z.nullable(z.string()),
    description: z.nullable(z.string()),
    shareOptions: z.nullable(z.lazy(() => exports.ShareOptions$outboundSchema)),
    showcaseMedia: z.nullable(z.lazy(() => exports.ShowcaseMedia$outboundSchema)),
    environment: deploymentenvironment_js_1.DeploymentEnvironment$outboundSchema,
    createdAt: z.date().transform(v => v.toISOString()),
    updatedAt: z.date().transform(v => v.toISOString()),
    workflow: workflowwithname_js_1.WorkflowWithName$outboundSchema,
    inputTypes: z.nullable(z.array(inputmodel_js_1.InputModel$outboundSchema)).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        userId: "user_id",
        orgId: "org_id",
        workflowVersionId: "workflow_version_id",
        workflowId: "workflow_id",
        machineId: "machine_id",
        shareSlug: "share_slug",
        shareOptions: "share_options",
        showcaseMedia: "showcase_media",
        createdAt: "created_at",
        updatedAt: "updated_at",
        inputTypes: "input_types",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DeploymentModel$;
(function (DeploymentModel$) {
    /** @deprecated use `DeploymentModel$inboundSchema` instead. */
    DeploymentModel$.inboundSchema = exports.DeploymentModel$inboundSchema;
    /** @deprecated use `DeploymentModel$outboundSchema` instead. */
    DeploymentModel$.outboundSchema = exports.DeploymentModel$outboundSchema;
})(DeploymentModel$ || (exports.DeploymentModel$ = DeploymentModel$ = {}));
//# sourceMappingURL=deploymentmodel.js.map