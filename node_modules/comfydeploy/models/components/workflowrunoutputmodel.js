"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowRunOutputModel$ = exports.WorkflowRunOutputModel$outboundSchema = exports.WorkflowRunOutputModel$inboundSchema = exports.Data$ = exports.Data$outboundSchema = exports.Data$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
const mediaitem_js_1 = require("./mediaitem.js");
/** @internal */
exports.Data$inboundSchema = z
    .union([mediaitem_js_1.MediaItem$inboundSchema, z.string()]);
/** @internal */
exports.Data$outboundSchema = z.union([mediaitem_js_1.MediaItem$outboundSchema, z.string()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Data$;
(function (Data$) {
    /** @deprecated use `Data$inboundSchema` instead. */
    Data$.inboundSchema = exports.Data$inboundSchema;
    /** @deprecated use `Data$outboundSchema` instead. */
    Data$.outboundSchema = exports.Data$outboundSchema;
})(Data$ || (exports.Data$ = Data$ = {}));
/** @internal */
exports.WorkflowRunOutputModel$inboundSchema = z.object({
    id: z.string(),
    run_id: z.string(),
    data: z.record(z.array(z.union([mediaitem_js_1.MediaItem$inboundSchema, z.string()]))),
    node_meta: z.nullable(z.any()).optional(),
    created_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    updated_at: z.string().datetime({ offset: true }).transform(v => new Date(v)),
    type: z.nullable(z.string()).optional(),
    node_id: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "run_id": "runId",
        "node_meta": "nodeMeta",
        "created_at": "createdAt",
        "updated_at": "updatedAt",
        "node_id": "nodeId",
    });
});
/** @internal */
exports.WorkflowRunOutputModel$outboundSchema = z.object({
    id: z.string(),
    runId: z.string(),
    data: z.record(z.array(z.union([mediaitem_js_1.MediaItem$outboundSchema, z.string()]))),
    nodeMeta: z.nullable(z.any()).optional(),
    createdAt: z.date().transform(v => v.toISOString()),
    updatedAt: z.date().transform(v => v.toISOString()),
    type: z.nullable(z.string()).optional(),
    nodeId: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        runId: "run_id",
        nodeMeta: "node_meta",
        createdAt: "created_at",
        updatedAt: "updated_at",
        nodeId: "node_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WorkflowRunOutputModel$;
(function (WorkflowRunOutputModel$) {
    /** @deprecated use `WorkflowRunOutputModel$inboundSchema` instead. */
    WorkflowRunOutputModel$.inboundSchema = exports.WorkflowRunOutputModel$inboundSchema;
    /** @deprecated use `WorkflowRunOutputModel$outboundSchema` instead. */
    WorkflowRunOutputModel$.outboundSchema = exports.WorkflowRunOutputModel$outboundSchema;
})(WorkflowRunOutputModel$ || (exports.WorkflowRunOutputModel$ = WorkflowRunOutputModel$ = {}));
//# sourceMappingURL=workflowrunoutputmodel.js.map