"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.WorkflowRunRequest$ = exports.WorkflowRunRequest$outboundSchema = exports.WorkflowRunRequest$inboundSchema = exports.Workflow$ = exports.Workflow$outboundSchema = exports.Workflow$inboundSchema = exports.WorkflowApiJson$ = exports.WorkflowApiJson$outboundSchema = exports.WorkflowApiJson$inboundSchema = exports.WorkflowRunRequestInputs$ = exports.WorkflowRunRequestInputs$outboundSchema = exports.WorkflowRunRequestInputs$inboundSchema = exports.WorkflowRunRequestExecutionMode$ = exports.WorkflowRunRequestExecutionMode$outboundSchema = exports.WorkflowRunRequestExecutionMode$inboundSchema = exports.WorkflowRunRequestExecutionMode = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
exports.WorkflowRunRequestExecutionMode = {
    Async: "async",
    Sync: "sync",
    SyncFirstResult: "sync_first_result",
    Stream: "stream",
};
/** @internal */
exports.WorkflowRunRequestExecutionMode$inboundSchema = z.nativeEnum(exports.WorkflowRunRequestExecutionMode);
/** @internal */
exports.WorkflowRunRequestExecutionMode$outboundSchema = exports.WorkflowRunRequestExecutionMode$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WorkflowRunRequestExecutionMode$;
(function (WorkflowRunRequestExecutionMode$) {
    /** @deprecated use `WorkflowRunRequestExecutionMode$inboundSchema` instead. */
    WorkflowRunRequestExecutionMode$.inboundSchema = exports.WorkflowRunRequestExecutionMode$inboundSchema;
    /** @deprecated use `WorkflowRunRequestExecutionMode$outboundSchema` instead. */
    WorkflowRunRequestExecutionMode$.outboundSchema = exports.WorkflowRunRequestExecutionMode$outboundSchema;
})(WorkflowRunRequestExecutionMode$ || (exports.WorkflowRunRequestExecutionMode$ = WorkflowRunRequestExecutionMode$ = {}));
/** @internal */
exports.WorkflowRunRequestInputs$inboundSchema = z.union([
    z.string(),
    z.number().int(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);
/** @internal */
exports.WorkflowRunRequestInputs$outboundSchema = z.union([
    z.string(),
    z.number().int(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WorkflowRunRequestInputs$;
(function (WorkflowRunRequestInputs$) {
    /** @deprecated use `WorkflowRunRequestInputs$inboundSchema` instead. */
    WorkflowRunRequestInputs$.inboundSchema = exports.WorkflowRunRequestInputs$inboundSchema;
    /** @deprecated use `WorkflowRunRequestInputs$outboundSchema` instead. */
    WorkflowRunRequestInputs$.outboundSchema = exports.WorkflowRunRequestInputs$outboundSchema;
})(WorkflowRunRequestInputs$ || (exports.WorkflowRunRequestInputs$ = WorkflowRunRequestInputs$ = {}));
/** @internal */
exports.WorkflowApiJson$inboundSchema = z.object({});
/** @internal */
exports.WorkflowApiJson$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WorkflowApiJson$;
(function (WorkflowApiJson$) {
    /** @deprecated use `WorkflowApiJson$inboundSchema` instead. */
    WorkflowApiJson$.inboundSchema = exports.WorkflowApiJson$inboundSchema;
    /** @deprecated use `WorkflowApiJson$outboundSchema` instead. */
    WorkflowApiJson$.outboundSchema = exports.WorkflowApiJson$outboundSchema;
})(WorkflowApiJson$ || (exports.WorkflowApiJson$ = WorkflowApiJson$ = {}));
/** @internal */
exports.Workflow$inboundSchema = z.object({});
/** @internal */
exports.Workflow$outboundSchema = z.object({});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Workflow$;
(function (Workflow$) {
    /** @deprecated use `Workflow$inboundSchema` instead. */
    Workflow$.inboundSchema = exports.Workflow$inboundSchema;
    /** @deprecated use `Workflow$outboundSchema` instead. */
    Workflow$.outboundSchema = exports.Workflow$outboundSchema;
})(Workflow$ || (exports.Workflow$ = Workflow$ = {}));
/** @internal */
exports.WorkflowRunRequest$inboundSchema = z.object({
    execution_mode: z.nullable(exports.WorkflowRunRequestExecutionMode$inboundSchema)
        .optional(),
    inputs: z.nullable(z.record(z.union([
        z.string(),
        z.number().int(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
    ]))).optional(),
    webhook: z.nullable(z.string()).optional(),
    webhook_intermediate_status: z.nullable(z.boolean()).optional(),
    origin: z.nullable(z.string()).optional(),
    batch_number: z.nullable(z.number().int()).optional(),
    batch_input_params: z.nullable(z.record(z.array(z.any()))).optional(),
    is_native_run: z.nullable(z.boolean()).optional(),
    gpu_event_id: z.nullable(z.string()).optional(),
    workflow_id: z.string(),
    workflow_api_json: z.lazy(() => exports.WorkflowApiJson$inboundSchema),
    workflow: z.nullable(z.lazy(() => exports.Workflow$inboundSchema)).optional(),
    machine_id: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "execution_mode": "executionMode",
        "webhook_intermediate_status": "webhookIntermediateStatus",
        "batch_number": "batchNumber",
        "batch_input_params": "batchInputParams",
        "is_native_run": "isNativeRun",
        "gpu_event_id": "gpuEventId",
        "workflow_id": "workflowId",
        "workflow_api_json": "workflowApiJson",
        "machine_id": "machineId",
    });
});
/** @internal */
exports.WorkflowRunRequest$outboundSchema = z.object({
    executionMode: z.nullable(exports.WorkflowRunRequestExecutionMode$outboundSchema)
        .optional(),
    inputs: z.nullable(z.record(z.union([
        z.string(),
        z.number().int(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
    ]))).optional(),
    webhook: z.nullable(z.string()).optional(),
    webhookIntermediateStatus: z.nullable(z.boolean()).optional(),
    origin: z.nullable(z.string()).optional(),
    batchNumber: z.nullable(z.number().int()).optional(),
    batchInputParams: z.nullable(z.record(z.array(z.any()))).optional(),
    isNativeRun: z.nullable(z.boolean()).optional(),
    gpuEventId: z.nullable(z.string()).optional(),
    workflowId: z.string(),
    workflowApiJson: z.lazy(() => exports.WorkflowApiJson$outboundSchema),
    workflow: z.nullable(z.lazy(() => exports.Workflow$outboundSchema)).optional(),
    machineId: z.nullable(z.string()).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        executionMode: "execution_mode",
        webhookIntermediateStatus: "webhook_intermediate_status",
        batchNumber: "batch_number",
        batchInputParams: "batch_input_params",
        isNativeRun: "is_native_run",
        gpuEventId: "gpu_event_id",
        workflowId: "workflow_id",
        workflowApiJson: "workflow_api_json",
        machineId: "machine_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var WorkflowRunRequest$;
(function (WorkflowRunRequest$) {
    /** @deprecated use `WorkflowRunRequest$inboundSchema` instead. */
    WorkflowRunRequest$.inboundSchema = exports.WorkflowRunRequest$inboundSchema;
    /** @deprecated use `WorkflowRunRequest$outboundSchema` instead. */
    WorkflowRunRequest$.outboundSchema = exports.WorkflowRunRequest$outboundSchema;
})(WorkflowRunRequest$ || (exports.WorkflowRunRequest$ = WorkflowRunRequest$ = {}));
//# sourceMappingURL=workflowrunrequest.js.map