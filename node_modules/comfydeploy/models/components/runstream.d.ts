import * as z from "zod";
import { EventUpdateEvent, EventUpdateEvent$Outbound } from "./eventupdateevent.js";
import { LogUpdateEvent, LogUpdateEvent$Outbound } from "./logupdateevent.js";
export type RunStream = (EventUpdateEvent & {
    event: "event_update";
}) | (LogUpdateEvent & {
    event: "log_update";
});
/** @internal */
export declare const RunStream$inboundSchema: z.ZodType<RunStream, z.ZodTypeDef, unknown>;
/** @internal */
export type RunStream$Outbound = (EventUpdateEvent$Outbound & {
    event: "event_update";
}) | (LogUpdateEvent$Outbound & {
    event: "log_update";
});
/** @internal */
export declare const RunStream$outboundSchema: z.ZodType<RunStream$Outbound, z.ZodTypeDef, RunStream>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RunStream$ {
    /** @deprecated use `RunStream$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RunStream, z.ZodTypeDef, unknown>;
    /** @deprecated use `RunStream$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RunStream$Outbound, z.ZodTypeDef, RunStream>;
    /** @deprecated use `RunStream$Outbound` instead. */
    type Outbound = RunStream$Outbound;
}
//# sourceMappingURL=runstream.d.ts.map