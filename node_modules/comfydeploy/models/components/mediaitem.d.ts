import * as z from "zod";
export type MediaItem = {
    url: string;
    type: string;
    filename: string;
    isPublic?: boolean | null | undefined;
    subfolder?: string | null | undefined;
    uploadDuration?: number | null | undefined;
};
/** @internal */
export declare const MediaItem$inboundSchema: z.ZodType<MediaItem, z.ZodTypeDef, unknown>;
/** @internal */
export type MediaItem$Outbound = {
    url: string;
    type: string;
    filename: string;
    is_public?: boolean | null | undefined;
    subfolder?: string | null | undefined;
    upload_duration?: number | null | undefined;
};
/** @internal */
export declare const MediaItem$outboundSchema: z.ZodType<MediaItem$Outbound, z.ZodTypeDef, MediaItem>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace MediaItem$ {
    /** @deprecated use `MediaItem$inboundSchema` instead. */
    const inboundSchema: z.ZodType<MediaItem, z.ZodTypeDef, unknown>;
    /** @deprecated use `MediaItem$outboundSchema` instead. */
    const outboundSchema: z.ZodType<MediaItem$Outbound, z.ZodTypeDef, MediaItem>;
    /** @deprecated use `MediaItem$Outbound` instead. */
    type Outbound = MediaItem$Outbound;
}
//# sourceMappingURL=mediaitem.d.ts.map