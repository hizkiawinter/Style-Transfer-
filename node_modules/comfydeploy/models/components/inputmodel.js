"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.InputModel$ = exports.InputModel$outboundSchema = exports.InputModel$inboundSchema = exports.Step$ = exports.Step$outboundSchema = exports.Step$inboundSchema = exports.MaxValue$ = exports.MaxValue$outboundSchema = exports.MaxValue$inboundSchema = exports.MinValue$ = exports.MinValue$outboundSchema = exports.MinValue$inboundSchema = exports.DefaultValue$ = exports.DefaultValue$outboundSchema = exports.DefaultValue$inboundSchema = void 0;
const z = __importStar(require("zod"));
const primitives_js_1 = require("../../lib/primitives.js");
/** @internal */
exports.DefaultValue$inboundSchema = z.union([
    z.string(),
    z.number().int(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);
/** @internal */
exports.DefaultValue$outboundSchema = z.union([
    z.string(),
    z.number().int(),
    z.number(),
    z.boolean(),
    z.array(z.any()),
]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var DefaultValue$;
(function (DefaultValue$) {
    /** @deprecated use `DefaultValue$inboundSchema` instead. */
    DefaultValue$.inboundSchema = exports.DefaultValue$inboundSchema;
    /** @deprecated use `DefaultValue$outboundSchema` instead. */
    DefaultValue$.outboundSchema = exports.DefaultValue$outboundSchema;
})(DefaultValue$ || (exports.DefaultValue$ = DefaultValue$ = {}));
/** @internal */
exports.MinValue$inboundSchema = z.union([z.number().int(), z.number()]);
/** @internal */
exports.MinValue$outboundSchema = z.union([z.number().int(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var MinValue$;
(function (MinValue$) {
    /** @deprecated use `MinValue$inboundSchema` instead. */
    MinValue$.inboundSchema = exports.MinValue$inboundSchema;
    /** @deprecated use `MinValue$outboundSchema` instead. */
    MinValue$.outboundSchema = exports.MinValue$outboundSchema;
})(MinValue$ || (exports.MinValue$ = MinValue$ = {}));
/** @internal */
exports.MaxValue$inboundSchema = z.union([z.number().int(), z.number()]);
/** @internal */
exports.MaxValue$outboundSchema = z.union([z.number().int(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var MaxValue$;
(function (MaxValue$) {
    /** @deprecated use `MaxValue$inboundSchema` instead. */
    MaxValue$.inboundSchema = exports.MaxValue$inboundSchema;
    /** @deprecated use `MaxValue$outboundSchema` instead. */
    MaxValue$.outboundSchema = exports.MaxValue$outboundSchema;
})(MaxValue$ || (exports.MaxValue$ = MaxValue$ = {}));
/** @internal */
exports.Step$inboundSchema = z
    .union([z.number().int(), z.number()]);
/** @internal */
exports.Step$outboundSchema = z.union([z.number().int(), z.number()]);
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Step$;
(function (Step$) {
    /** @deprecated use `Step$inboundSchema` instead. */
    Step$.inboundSchema = exports.Step$inboundSchema;
    /** @deprecated use `Step$outboundSchema` instead. */
    Step$.outboundSchema = exports.Step$outboundSchema;
})(Step$ || (exports.Step$ = Step$ = {}));
/** @internal */
exports.InputModel$inboundSchema = z.object({
    type: z.string(),
    class_type: z.string(),
    input_id: z.string(),
    default_value: z.nullable(z.union([
        z.string(),
        z.number().int(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
    ])).optional(),
    min_value: z.nullable(z.union([z.number().int(), z.number()])).optional(),
    max_value: z.nullable(z.union([z.number().int(), z.number()])).optional(),
    display_name: z.string().default(""),
    description: z.string().default(""),
    enum_options: z.nullable(z.array(z.string())).optional(),
    step: z.nullable(z.union([z.number().int(), z.number()])).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        "class_type": "classType",
        "input_id": "inputId",
        "default_value": "defaultValue",
        "min_value": "minValue",
        "max_value": "maxValue",
        "display_name": "displayName",
        "enum_options": "enumOptions",
    });
});
/** @internal */
exports.InputModel$outboundSchema = z.object({
    type: z.string(),
    classType: z.string(),
    inputId: z.string(),
    defaultValue: z.nullable(z.union([
        z.string(),
        z.number().int(),
        z.number(),
        z.boolean(),
        z.array(z.any()),
    ])).optional(),
    minValue: z.nullable(z.union([z.number().int(), z.number()])).optional(),
    maxValue: z.nullable(z.union([z.number().int(), z.number()])).optional(),
    displayName: z.string().default(""),
    description: z.string().default(""),
    enumOptions: z.nullable(z.array(z.string())).optional(),
    step: z.nullable(z.union([z.number().int(), z.number()])).optional(),
}).transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        classType: "class_type",
        inputId: "input_id",
        defaultValue: "default_value",
        minValue: "min_value",
        maxValue: "max_value",
        displayName: "display_name",
        enumOptions: "enum_options",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var InputModel$;
(function (InputModel$) {
    /** @deprecated use `InputModel$inboundSchema` instead. */
    InputModel$.inboundSchema = exports.InputModel$inboundSchema;
    /** @deprecated use `InputModel$outboundSchema` instead. */
    InputModel$.outboundSchema = exports.InputModel$outboundSchema;
})(InputModel$ || (exports.InputModel$ = InputModel$ = {}));
//# sourceMappingURL=inputmodel.js.map