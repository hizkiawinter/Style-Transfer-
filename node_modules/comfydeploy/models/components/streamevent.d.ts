import * as z from "zod";
export type StreamEvent = {
    event: string;
};
/** @internal */
export declare const StreamEvent$inboundSchema: z.ZodType<StreamEvent, z.ZodTypeDef, unknown>;
/** @internal */
export type StreamEvent$Outbound = {
    event: string;
};
/** @internal */
export declare const StreamEvent$outboundSchema: z.ZodType<StreamEvent$Outbound, z.ZodTypeDef, StreamEvent>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace StreamEvent$ {
    /** @deprecated use `StreamEvent$inboundSchema` instead. */
    const inboundSchema: z.ZodType<StreamEvent, z.ZodTypeDef, unknown>;
    /** @deprecated use `StreamEvent$outboundSchema` instead. */
    const outboundSchema: z.ZodType<StreamEvent$Outbound, z.ZodTypeDef, StreamEvent>;
    /** @deprecated use `StreamEvent$Outbound` instead. */
    type Outbound = StreamEvent$Outbound;
}
//# sourceMappingURL=streamevent.d.ts.map