import * as z from "zod";
import { MachineGPU } from "./machinegpu.js";
export type CreateSessionBody = {
    machineId: string;
    /**
     * The GPU to use
     */
    gpu?: MachineGPU | null | undefined;
    /**
     * The timeout in minutes
     */
    timeout?: number | null | undefined;
    /**
     * Whether to create the session asynchronously
     */
    waitForServer?: boolean | undefined;
};
/** @internal */
export declare const CreateSessionBody$inboundSchema: z.ZodType<CreateSessionBody, z.ZodTypeDef, unknown>;
/** @internal */
export type CreateSessionBody$Outbound = {
    machine_id: string;
    gpu?: string | null | undefined;
    timeout?: number | null | undefined;
    wait_for_server: boolean;
};
/** @internal */
export declare const CreateSessionBody$outboundSchema: z.ZodType<CreateSessionBody$Outbound, z.ZodTypeDef, CreateSessionBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace CreateSessionBody$ {
    /** @deprecated use `CreateSessionBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<CreateSessionBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `CreateSessionBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<CreateSessionBody$Outbound, z.ZodTypeDef, CreateSessionBody>;
    /** @deprecated use `CreateSessionBody$Outbound` instead. */
    type Outbound = CreateSessionBody$Outbound;
}
//# sourceMappingURL=createsessionbody.d.ts.map