import * as z from "zod";
import { MediaItem, MediaItem$Outbound } from "./mediaitem.js";
export type ApiRoutesTypesWorkflowRunOutputModel2 = {
    id: string;
    runId: string;
    data: {
        [k: string]: Array<MediaItem>;
    };
    createdAt: Date;
    updatedAt: Date;
    type?: string | null | undefined;
    nodeId?: string | null | undefined;
};
/** @internal */
export declare const ApiRoutesTypesWorkflowRunOutputModel2$inboundSchema: z.ZodType<ApiRoutesTypesWorkflowRunOutputModel2, z.ZodTypeDef, unknown>;
/** @internal */
export type ApiRoutesTypesWorkflowRunOutputModel2$Outbound = {
    id: string;
    run_id: string;
    data: {
        [k: string]: Array<MediaItem$Outbound>;
    };
    created_at: string;
    updated_at: string;
    type?: string | null | undefined;
    node_id?: string | null | undefined;
};
/** @internal */
export declare const ApiRoutesTypesWorkflowRunOutputModel2$outboundSchema: z.ZodType<ApiRoutesTypesWorkflowRunOutputModel2$Outbound, z.ZodTypeDef, ApiRoutesTypesWorkflowRunOutputModel2>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace ApiRoutesTypesWorkflowRunOutputModel2$ {
    /** @deprecated use `ApiRoutesTypesWorkflowRunOutputModel2$inboundSchema` instead. */
    const inboundSchema: z.ZodType<ApiRoutesTypesWorkflowRunOutputModel2, z.ZodTypeDef, unknown>;
    /** @deprecated use `ApiRoutesTypesWorkflowRunOutputModel2$outboundSchema` instead. */
    const outboundSchema: z.ZodType<ApiRoutesTypesWorkflowRunOutputModel2$Outbound, z.ZodTypeDef, ApiRoutesTypesWorkflowRunOutputModel2>;
    /** @deprecated use `ApiRoutesTypesWorkflowRunOutputModel2$Outbound` instead. */
    type Outbound = ApiRoutesTypesWorkflowRunOutputModel2$Outbound;
}
//# sourceMappingURL=apiroutestypesworkflowrunoutputmodel2.d.ts.map