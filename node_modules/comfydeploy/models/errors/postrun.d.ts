import * as z from "zod";
/**
 * Error creating run
 */
export type PostRunResponseBodyData = {
    error: string;
};
/**
 * Error creating run
 */
export declare class PostRunResponseBody extends Error {
    error: string;
    /** The original data that was passed to this error instance. */
    data$: PostRunResponseBodyData;
    constructor(err: PostRunResponseBodyData);
}
/** @internal */
export declare const PostRunResponseBody$inboundSchema: z.ZodType<PostRunResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PostRunResponseBody$Outbound = {
    error: string;
};
/** @internal */
export declare const PostRunResponseBody$outboundSchema: z.ZodType<PostRunResponseBody$Outbound, z.ZodTypeDef, PostRunResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostRunResponseBody$ {
    /** @deprecated use `PostRunResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostRunResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostRunResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostRunResponseBody$Outbound, z.ZodTypeDef, PostRunResponseBody>;
    /** @deprecated use `PostRunResponseBody$Outbound` instead. */
    type Outbound = PostRunResponseBody$Outbound;
}
//# sourceMappingURL=postrun.d.ts.map