import * as z from "zod";
/**
 * Error in retrieving the specific workflow
 */
export type GetV1WorkflowsWorkflowIdResponseBodyData = {
    error: string;
};
/**
 * Error in retrieving the specific workflow
 */
export declare class GetV1WorkflowsWorkflowIdResponseBody extends Error {
    error: string;
    /** The original data that was passed to this error instance. */
    data$: GetV1WorkflowsWorkflowIdResponseBodyData;
    constructor(err: GetV1WorkflowsWorkflowIdResponseBodyData);
}
/** @internal */
export declare const GetV1WorkflowsWorkflowIdResponseBody$inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsWorkflowIdResponseBody$Outbound = {
    error: string;
};
/** @internal */
export declare const GetV1WorkflowsWorkflowIdResponseBody$outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsWorkflowIdResponseBody$ {
    /** @deprecated use `GetV1WorkflowsWorkflowIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdResponseBody>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdResponseBody$Outbound` instead. */
    type Outbound = GetV1WorkflowsWorkflowIdResponseBody$Outbound;
}
//# sourceMappingURL=getv1workflowsworkflowid.d.ts.map