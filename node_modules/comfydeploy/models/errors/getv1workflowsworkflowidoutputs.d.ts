import * as z from "zod";
/**
 * Error in retrieving the specific workflow
 */
export type GetV1WorkflowsWorkflowIdOutputsResponseBodyData = {
    error: string;
};
/**
 * Error in retrieving the specific workflow
 */
export declare class GetV1WorkflowsWorkflowIdOutputsResponseBody extends Error {
    error: string;
    /** The original data that was passed to this error instance. */
    data$: GetV1WorkflowsWorkflowIdOutputsResponseBodyData;
    constructor(err: GetV1WorkflowsWorkflowIdOutputsResponseBodyData);
}
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound = {
    error: string;
};
/** @internal */
export declare const GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetV1WorkflowsWorkflowIdOutputsResponseBody$ {
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound, z.ZodTypeDef, GetV1WorkflowsWorkflowIdOutputsResponseBody>;
    /** @deprecated use `GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound` instead. */
    type Outbound = GetV1WorkflowsWorkflowIdOutputsResponseBody$Outbound;
}
//# sourceMappingURL=getv1workflowsworkflowidoutputs.d.ts.map