import * as z from "zod";
/**
 * Error when uploading the workflow
 */
export type PostWorkflowResponseBodyData = {
    error: string;
};
/**
 * Error when uploading the workflow
 */
export declare class PostWorkflowResponseBody extends Error {
    error: string;
    /** The original data that was passed to this error instance. */
    data$: PostWorkflowResponseBodyData;
    constructor(err: PostWorkflowResponseBodyData);
}
/** @internal */
export declare const PostWorkflowResponseBody$inboundSchema: z.ZodType<PostWorkflowResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type PostWorkflowResponseBody$Outbound = {
    error: string;
};
/** @internal */
export declare const PostWorkflowResponseBody$outboundSchema: z.ZodType<PostWorkflowResponseBody$Outbound, z.ZodTypeDef, PostWorkflowResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace PostWorkflowResponseBody$ {
    /** @deprecated use `PostWorkflowResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<PostWorkflowResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `PostWorkflowResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<PostWorkflowResponseBody$Outbound, z.ZodTypeDef, PostWorkflowResponseBody>;
    /** @deprecated use `PostWorkflowResponseBody$Outbound` instead. */
    type Outbound = PostWorkflowResponseBody$Outbound;
}
//# sourceMappingURL=postworkflow.d.ts.map