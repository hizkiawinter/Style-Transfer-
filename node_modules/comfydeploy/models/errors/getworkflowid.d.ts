import * as z from "zod";
/**
 * Error when uploading the workflow
 */
export type GetWorkflowIdResponseBodyData = {
    error: string;
};
/**
 * Error when uploading the workflow
 */
export declare class GetWorkflowIdResponseBody extends Error {
    error: string;
    /** The original data that was passed to this error instance. */
    data$: GetWorkflowIdResponseBodyData;
    constructor(err: GetWorkflowIdResponseBodyData);
}
/** @internal */
export declare const GetWorkflowIdResponseBody$inboundSchema: z.ZodType<GetWorkflowIdResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetWorkflowIdResponseBody$Outbound = {
    error: string;
};
/** @internal */
export declare const GetWorkflowIdResponseBody$outboundSchema: z.ZodType<GetWorkflowIdResponseBody$Outbound, z.ZodTypeDef, GetWorkflowIdResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetWorkflowIdResponseBody$ {
    /** @deprecated use `GetWorkflowIdResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetWorkflowIdResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetWorkflowIdResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetWorkflowIdResponseBody$Outbound, z.ZodTypeDef, GetWorkflowIdResponseBody>;
    /** @deprecated use `GetWorkflowIdResponseBody$Outbound` instead. */
    type Outbound = GetWorkflowIdResponseBody$Outbound;
}
//# sourceMappingURL=getworkflowid.d.ts.map