import * as z from "zod";
/**
 * error
 */
export type GetDeploymentResponseBodyData = {
    error: string;
};
/**
 * error
 */
export declare class GetDeploymentResponseBody extends Error {
    error: string;
    /** The original data that was passed to this error instance. */
    data$: GetDeploymentResponseBodyData;
    constructor(err: GetDeploymentResponseBodyData);
}
/** @internal */
export declare const GetDeploymentResponseBody$inboundSchema: z.ZodType<GetDeploymentResponseBody, z.ZodTypeDef, unknown>;
/** @internal */
export type GetDeploymentResponseBody$Outbound = {
    error: string;
};
/** @internal */
export declare const GetDeploymentResponseBody$outboundSchema: z.ZodType<GetDeploymentResponseBody$Outbound, z.ZodTypeDef, GetDeploymentResponseBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace GetDeploymentResponseBody$ {
    /** @deprecated use `GetDeploymentResponseBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<GetDeploymentResponseBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `GetDeploymentResponseBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<GetDeploymentResponseBody$Outbound, z.ZodTypeDef, GetDeploymentResponseBody>;
    /** @deprecated use `GetDeploymentResponseBody$Outbound` instead. */
    type Outbound = GetDeploymentResponseBody$Outbound;
}
//# sourceMappingURL=getdeployment.d.ts.map