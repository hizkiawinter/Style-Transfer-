import * as z from "zod";
import { ClosedEnum } from "../../types/enums.js";
export declare const Status: {
    readonly NotStarted: "not-started";
    readonly Running: "running";
    readonly Uploading: "uploading";
    readonly Success: "success";
    readonly Failed: "failed";
    readonly Started: "started";
    readonly Queued: "queued";
    readonly Timeout: "timeout";
    readonly Cancelled: "cancelled";
};
export type Status = ClosedEnum<typeof Status>;
export type Images = {
    url: string;
    filename: string;
};
export type Files = {
    url: string;
    filename: string;
};
export type Gifs = {
    url: string;
    filename: string;
};
export type Data = {
    images?: Array<Images> | undefined;
    files?: Array<Files> | undefined;
    gifs?: Array<Gifs> | undefined;
    text?: Array<string> | undefined;
};
export type Outputs = {
    data: Data;
};
export type RunUpdatesRequestBody = {
    status: Status;
    liveStatus: string;
    progress: number;
    runId: string;
    outputs: Array<Outputs>;
};
/** @internal */
export declare const Status$inboundSchema: z.ZodNativeEnum<typeof Status>;
/** @internal */
export declare const Status$outboundSchema: z.ZodNativeEnum<typeof Status>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Status$ {
    /** @deprecated use `Status$inboundSchema` instead. */
    const inboundSchema: z.ZodNativeEnum<{
        readonly NotStarted: "not-started";
        readonly Running: "running";
        readonly Uploading: "uploading";
        readonly Success: "success";
        readonly Failed: "failed";
        readonly Started: "started";
        readonly Queued: "queued";
        readonly Timeout: "timeout";
        readonly Cancelled: "cancelled";
    }>;
    /** @deprecated use `Status$outboundSchema` instead. */
    const outboundSchema: z.ZodNativeEnum<{
        readonly NotStarted: "not-started";
        readonly Running: "running";
        readonly Uploading: "uploading";
        readonly Success: "success";
        readonly Failed: "failed";
        readonly Started: "started";
        readonly Queued: "queued";
        readonly Timeout: "timeout";
        readonly Cancelled: "cancelled";
    }>;
}
/** @internal */
export declare const Images$inboundSchema: z.ZodType<Images, z.ZodTypeDef, unknown>;
/** @internal */
export type Images$Outbound = {
    url: string;
    filename: string;
};
/** @internal */
export declare const Images$outboundSchema: z.ZodType<Images$Outbound, z.ZodTypeDef, Images>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Images$ {
    /** @deprecated use `Images$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Images, z.ZodTypeDef, unknown>;
    /** @deprecated use `Images$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Images$Outbound, z.ZodTypeDef, Images>;
    /** @deprecated use `Images$Outbound` instead. */
    type Outbound = Images$Outbound;
}
/** @internal */
export declare const Files$inboundSchema: z.ZodType<Files, z.ZodTypeDef, unknown>;
/** @internal */
export type Files$Outbound = {
    url: string;
    filename: string;
};
/** @internal */
export declare const Files$outboundSchema: z.ZodType<Files$Outbound, z.ZodTypeDef, Files>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Files$ {
    /** @deprecated use `Files$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Files, z.ZodTypeDef, unknown>;
    /** @deprecated use `Files$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Files$Outbound, z.ZodTypeDef, Files>;
    /** @deprecated use `Files$Outbound` instead. */
    type Outbound = Files$Outbound;
}
/** @internal */
export declare const Gifs$inboundSchema: z.ZodType<Gifs, z.ZodTypeDef, unknown>;
/** @internal */
export type Gifs$Outbound = {
    url: string;
    filename: string;
};
/** @internal */
export declare const Gifs$outboundSchema: z.ZodType<Gifs$Outbound, z.ZodTypeDef, Gifs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Gifs$ {
    /** @deprecated use `Gifs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Gifs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Gifs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Gifs$Outbound, z.ZodTypeDef, Gifs>;
    /** @deprecated use `Gifs$Outbound` instead. */
    type Outbound = Gifs$Outbound;
}
/** @internal */
export declare const Data$inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
/** @internal */
export type Data$Outbound = {
    images?: Array<Images$Outbound> | undefined;
    files?: Array<Files$Outbound> | undefined;
    gifs?: Array<Gifs$Outbound> | undefined;
    text?: Array<string> | undefined;
};
/** @internal */
export declare const Data$outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Data$ {
    /** @deprecated use `Data$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Data, z.ZodTypeDef, unknown>;
    /** @deprecated use `Data$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Data$Outbound, z.ZodTypeDef, Data>;
    /** @deprecated use `Data$Outbound` instead. */
    type Outbound = Data$Outbound;
}
/** @internal */
export declare const Outputs$inboundSchema: z.ZodType<Outputs, z.ZodTypeDef, unknown>;
/** @internal */
export type Outputs$Outbound = {
    data: Data$Outbound;
};
/** @internal */
export declare const Outputs$outboundSchema: z.ZodType<Outputs$Outbound, z.ZodTypeDef, Outputs>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace Outputs$ {
    /** @deprecated use `Outputs$inboundSchema` instead. */
    const inboundSchema: z.ZodType<Outputs, z.ZodTypeDef, unknown>;
    /** @deprecated use `Outputs$outboundSchema` instead. */
    const outboundSchema: z.ZodType<Outputs$Outbound, z.ZodTypeDef, Outputs>;
    /** @deprecated use `Outputs$Outbound` instead. */
    type Outbound = Outputs$Outbound;
}
/** @internal */
export declare const RunUpdatesRequestBody$inboundSchema: z.ZodType<RunUpdatesRequestBody, z.ZodTypeDef, unknown>;
/** @internal */
export type RunUpdatesRequestBody$Outbound = {
    status: string;
    live_status: string;
    progress: number;
    run_id: string;
    outputs: Array<Outputs$Outbound>;
};
/** @internal */
export declare const RunUpdatesRequestBody$outboundSchema: z.ZodType<RunUpdatesRequestBody$Outbound, z.ZodTypeDef, RunUpdatesRequestBody>;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export declare namespace RunUpdatesRequestBody$ {
    /** @deprecated use `RunUpdatesRequestBody$inboundSchema` instead. */
    const inboundSchema: z.ZodType<RunUpdatesRequestBody, z.ZodTypeDef, unknown>;
    /** @deprecated use `RunUpdatesRequestBody$outboundSchema` instead. */
    const outboundSchema: z.ZodType<RunUpdatesRequestBody$Outbound, z.ZodTypeDef, RunUpdatesRequestBody>;
    /** @deprecated use `RunUpdatesRequestBody$Outbound` instead. */
    type Outbound = RunUpdatesRequestBody$Outbound;
}
//# sourceMappingURL=runupdates.d.ts.map