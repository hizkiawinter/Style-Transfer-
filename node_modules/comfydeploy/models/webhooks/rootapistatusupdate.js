"use strict";
/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.RootApiStatusUpdateRequestBody$ = exports.RootApiStatusUpdateRequestBody$outboundSchema = exports.RootApiStatusUpdateRequestBody$inboundSchema = exports.Outputs$ = exports.Outputs$outboundSchema = exports.Outputs$inboundSchema = exports.Data$ = exports.Data$outboundSchema = exports.Data$inboundSchema = exports.Gifs$ = exports.Gifs$outboundSchema = exports.Gifs$inboundSchema = exports.Files$ = exports.Files$outboundSchema = exports.Files$inboundSchema = exports.Images$ = exports.Images$outboundSchema = exports.Images$inboundSchema = exports.Status$ = exports.Status$outboundSchema = exports.Status$inboundSchema = exports.Status = void 0;
const primitives_js_1 = require("../../lib/primitives.js");
const z = __importStar(require("zod"));
exports.Status = {
    NotStarted: "not-started",
    Running: "running",
    Uploading: "uploading",
    Success: "success",
    Failed: "failed",
    Started: "started",
    Queued: "queued",
    Timeout: "timeout",
    Cancelled: "cancelled",
};
/** @internal */
exports.Status$inboundSchema = z.nativeEnum(exports.Status);
/** @internal */
exports.Status$outboundSchema = exports.Status$inboundSchema;
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Status$;
(function (Status$) {
    /** @deprecated use `Status$inboundSchema` instead. */
    Status$.inboundSchema = exports.Status$inboundSchema;
    /** @deprecated use `Status$outboundSchema` instead. */
    Status$.outboundSchema = exports.Status$outboundSchema;
})(Status$ || (exports.Status$ = Status$ = {}));
/** @internal */
exports.Images$inboundSchema = z.object({
    url: z.string(),
    filename: z.string(),
});
/** @internal */
exports.Images$outboundSchema = z.object({
    url: z.string(),
    filename: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Images$;
(function (Images$) {
    /** @deprecated use `Images$inboundSchema` instead. */
    Images$.inboundSchema = exports.Images$inboundSchema;
    /** @deprecated use `Images$outboundSchema` instead. */
    Images$.outboundSchema = exports.Images$outboundSchema;
})(Images$ || (exports.Images$ = Images$ = {}));
/** @internal */
exports.Files$inboundSchema = z.object({
    url: z.string(),
    filename: z.string(),
});
/** @internal */
exports.Files$outboundSchema = z.object({
    url: z.string(),
    filename: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Files$;
(function (Files$) {
    /** @deprecated use `Files$inboundSchema` instead. */
    Files$.inboundSchema = exports.Files$inboundSchema;
    /** @deprecated use `Files$outboundSchema` instead. */
    Files$.outboundSchema = exports.Files$outboundSchema;
})(Files$ || (exports.Files$ = Files$ = {}));
/** @internal */
exports.Gifs$inboundSchema = z.object({
    url: z.string(),
    filename: z.string(),
});
/** @internal */
exports.Gifs$outboundSchema = z.object({
    url: z.string(),
    filename: z.string(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Gifs$;
(function (Gifs$) {
    /** @deprecated use `Gifs$inboundSchema` instead. */
    Gifs$.inboundSchema = exports.Gifs$inboundSchema;
    /** @deprecated use `Gifs$outboundSchema` instead. */
    Gifs$.outboundSchema = exports.Gifs$outboundSchema;
})(Gifs$ || (exports.Gifs$ = Gifs$ = {}));
/** @internal */
exports.Data$inboundSchema = z.object({
    images: z.array(z.lazy(() => exports.Images$inboundSchema)).optional(),
    files: z.array(z.lazy(() => exports.Files$inboundSchema)).optional(),
    gifs: z.array(z.lazy(() => exports.Gifs$inboundSchema)).optional(),
    text: z.array(z.string()).optional(),
});
/** @internal */
exports.Data$outboundSchema = z.object({
    images: z.array(z.lazy(() => exports.Images$outboundSchema)).optional(),
    files: z.array(z.lazy(() => exports.Files$outboundSchema)).optional(),
    gifs: z.array(z.lazy(() => exports.Gifs$outboundSchema)).optional(),
    text: z.array(z.string()).optional(),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Data$;
(function (Data$) {
    /** @deprecated use `Data$inboundSchema` instead. */
    Data$.inboundSchema = exports.Data$inboundSchema;
    /** @deprecated use `Data$outboundSchema` instead. */
    Data$.outboundSchema = exports.Data$outboundSchema;
})(Data$ || (exports.Data$ = Data$ = {}));
/** @internal */
exports.Outputs$inboundSchema = z.object({
    data: z.lazy(() => exports.Data$inboundSchema),
});
/** @internal */
exports.Outputs$outboundSchema = z.object({
    data: z.lazy(() => exports.Data$outboundSchema),
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var Outputs$;
(function (Outputs$) {
    /** @deprecated use `Outputs$inboundSchema` instead. */
    Outputs$.inboundSchema = exports.Outputs$inboundSchema;
    /** @deprecated use `Outputs$outboundSchema` instead. */
    Outputs$.outboundSchema = exports.Outputs$outboundSchema;
})(Outputs$ || (exports.Outputs$ = Outputs$ = {}));
/** @internal */
exports.RootApiStatusUpdateRequestBody$inboundSchema = z
    .object({
    status: exports.Status$inboundSchema,
    live_status: z.string(),
    progress: z.number(),
    run_id: z.string(),
    outputs: z.array(z.lazy(() => exports.Outputs$inboundSchema)),
})
    .transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        live_status: "liveStatus",
        run_id: "runId",
    });
});
/** @internal */
exports.RootApiStatusUpdateRequestBody$outboundSchema = z
    .object({
    status: exports.Status$outboundSchema,
    liveStatus: z.string(),
    progress: z.number(),
    runId: z.string(),
    outputs: z.array(z.lazy(() => exports.Outputs$outboundSchema)),
})
    .transform((v) => {
    return (0, primitives_js_1.remap)(v, {
        liveStatus: "live_status",
        runId: "run_id",
    });
});
/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
var RootApiStatusUpdateRequestBody$;
(function (RootApiStatusUpdateRequestBody$) {
    /** @deprecated use `RootApiStatusUpdateRequestBody$inboundSchema` instead. */
    RootApiStatusUpdateRequestBody$.inboundSchema = exports.RootApiStatusUpdateRequestBody$inboundSchema;
    /** @deprecated use `RootApiStatusUpdateRequestBody$outboundSchema` instead. */
    RootApiStatusUpdateRequestBody$.outboundSchema = exports.RootApiStatusUpdateRequestBody$outboundSchema;
})(RootApiStatusUpdateRequestBody$ || (exports.RootApiStatusUpdateRequestBody$ = RootApiStatusUpdateRequestBody$ = {}));
//# sourceMappingURL=rootapistatusupdate.js.map