/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";

export type WorkflowWithName = {
  id: string;
  name: string;
};

/** @internal */
export const WorkflowWithName$inboundSchema: z.ZodType<
  WorkflowWithName,
  z.ZodTypeDef,
  unknown
> = z.object({
  id: z.string(),
  name: z.string(),
});

/** @internal */
export type WorkflowWithName$Outbound = {
  id: string;
  name: string;
};

/** @internal */
export const WorkflowWithName$outboundSchema: z.ZodType<
  WorkflowWithName$Outbound,
  z.ZodTypeDef,
  WorkflowWithName
> = z.object({
  id: z.string(),
  name: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace WorkflowWithName$ {
  /** @deprecated use `WorkflowWithName$inboundSchema` instead. */
  export const inboundSchema = WorkflowWithName$inboundSchema;
  /** @deprecated use `WorkflowWithName$outboundSchema` instead. */
  export const outboundSchema = WorkflowWithName$outboundSchema;
  /** @deprecated use `WorkflowWithName$Outbound` instead. */
  export type Outbound = WorkflowWithName$Outbound;
}
